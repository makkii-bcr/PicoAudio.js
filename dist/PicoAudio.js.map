{"version":3,"file":"PicoAudio.js","sources":["../src/init/constructor.js","../src/util/random-util.js","../src/util/interpolation-util.js","../src/init/init.js","../src/util/ponyfill.js","../src/player/set-data.js","../src/player/init-status.js","../src/util/array-util.js","../src/util/parse-util.js","../src/player/play/update-note.js","../src/player/play.js","../src/player/stop.js","../src/player/sound-source/create-base-note.js","../src/player/sound-source/create-note.js","../src/player/sound-source/create-percussion-note.js","../src/player/stop-manager/stop-audio-node.js","../src/player/stop-manager/push-func.js","../src/player/stop-manager/clear-func.js","../src/player/time/get-time.js","../src/player/time/get-timing.js","../src/smf/parse-smf/parse-header.js","../src/smf/parse-smf/parse-track.js","../src/smf/parse-smf/parse-event.js","../src/smf/parse-smf.js","../src/web-midi/start-web-midi.js","../src/main.js"],"sourcesContent":["/*\r\nargsObj {\r\n    debug,\r\n    audioContext,\r\n    picoAudio,\r\n    etc (this.settings.xxx)\r\n}\r\n*/\r\nexport default function picoAudioConstructor(argsObj) {\r\n    this.debug = false;\r\n    this.isStarted = false;\r\n    this.isPlayed = false;\r\n    this.settings = {\r\n        masterVolume: 1,\r\n        generateVolume: 0.15,\r\n        tempo: 120,\r\n        basePitch: 440,\r\n        resolution: 480,\r\n        isWebMIDI: false,\r\n        WebMIDIPortOutputs: null,\r\n        WebMIDIPortOutput: null,\r\n        WebMIDIPort: -1, // -1:auto\r\n        WebMIDIPortSysEx: true, // MIDIデバイスのフルコントロールをするかどうか（SysExを使うかどうか）(httpsじゃないと使えない)\r\n        isReverb: true, // リバーブONにするか\r\n        reverbVolume: 1.5,\r\n        initReverb: 10,\r\n        isChorus: true,\r\n        chorusVolume: 0.5,\r\n        isCC111: true,\r\n        loop: false,\r\n        isSkipBeginning: false, // 冒頭の余白をスキップ\r\n        isSkipEnding: true, // 末尾の空白をスキップ\r\n        holdOnValue: 64,\r\n        maxPoly: -1, // 同時発音数 -1:infinity\r\n        maxPercPoly: -1, // 同時発音数(パーカッション) -1:infinity\r\n        isOfflineRendering: false, // TODO 演奏データを作成してから演奏する\r\n        isSameDrumSoundOverlap: false // 同じドラムの音が重なることを許容するか\r\n    };\r\n\r\n    // argsObjで設定値が指定されていたら上書きする\r\n    rewriteVar(this, argsObj, \"debug\");\r\n    for (let key in this.settings) {\r\n        rewriteVar(this.settings, argsObj, key);\r\n    }\r\n\r\n    this.events = [];\r\n    this.trigger = {\r\n        isNoteTrigger: true,\r\n        play: ()=>{},\r\n        stop: ()=>{},\r\n        noteOn: ()=>{},\r\n        noteOff: ()=>{},\r\n        songEnd: ()=>{}\r\n    };\r\n    this.states = {\r\n        isPlaying: false,\r\n        startTime: 0,\r\n        stopTime: 0,\r\n        stopFuncs: [],\r\n        webMIDIWaitState: null,\r\n        webMIDIStopTime: 0,\r\n        playIndices: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n        updateBufTime: 100,\r\n        updateBufMaxTime: 350,\r\n        updateIntervalTime: 0,\r\n        latencyLimitTime: 0\r\n    };\r\n    this.hashedDataList = [];\r\n    this.hashedMessageList = [];\r\n    this.playData = null;\r\n    this.channels = [];\r\n    this.tempoTrack = [\r\n        { timing: 0, value: 120 },\r\n        { timing: 0, value: 120 }\r\n    ];\r\n    this.cc111Time = -1;\r\n    this.onSongEndListener = null;\r\n\r\n    // チャンネルの設定値（音色, 減衰, 音量） //\r\n    for (let i=0; i<17; i++) {\r\n        this.channels.push([0, 0, 1]);\r\n    }\r\n\r\n    // AudioContextがある場合はそのまま初期化、なければAudioContextを用いる初期化をinit()で\r\n    if (argsObj && argsObj.audioContext) {\r\n        this.init(argsObj);\r\n    }\r\n}\r\n\r\nfunction rewriteVar(dist, src, hensu) {\r\n    if (src && src[hensu] != null && dist && dist[hensu] != null) {\r\n        dist[hensu] = src[hensu];\r\n    }\r\n}","/**\r\n * 固定パターンの乱数を提供するクラス\r\n */\r\nexport default class RandomUtil {\r\n    /**\r\n     * 乱数のシード値をリセットする\r\n     */\r\n    static resetSeed() {\r\n        this.init = true;\r\n        this.x = 123456789;\r\n        this.y = 362436069;\r\n        this.z = 521288629;\r\n        this.w = 8867512;\r\n    }\r\n\r\n    /**\r\n     * 乱数を返す\r\n     * \r\n     *     Math.random() と違い、毎回固定パターンで乱数が返される\r\n     * Xorshiftアルゴリズム\r\n     * @returns {number} 乱数\r\n     */\r\n    static random() {\r\n        if (!this.init) this.resetSeed();\r\n        const t = this.x ^ (this.x << 11);\r\n        this.x = this.y; this.y = this.z; this.z = this.w;\r\n        let r = this.w = (this.w ^ (this.w >>> 19)) ^ (t ^ (t >>> 8));\r\n        r = Math.abs(r) / 2147483648 % 2;\r\n        return r;\r\n    }\r\n}","/**\r\n * 補間を提供するクラス\r\n */\r\nexport default class InterpolationUtil {\r\n    /**\r\n     * 波形を線形補間する\r\n     * @param {AudioBuffer} buffer 補間結果を入れるAudioBuffer\r\n     * @param {Array} vtBufs 仮想音源の配列([Float32Array, Float32Array])\r\n     */\r\n    static lerpWave(buffer, vtBufs) {\r\n        // 仮想サンプルレート音源を本番音源に変換する //\r\n        const bufferSize = buffer.getChannelData(0).length;\r\n        const vtBufsSize = vtBufs[0].length;\r\n        if (bufferSize == vtBufsSize) { // 線形補間の必要なし //\r\n            for (let ch=0; ch<2; ch++) {\r\n                const data = buffer.getChannelData(ch);\r\n                const vtBuf = vtBufs[ch];\r\n                for (let i=0; i<bufferSize; i++) {\r\n                    data[i] = vtBuf[i];\r\n                }\r\n            }\r\n        } else { // 線形補間 //\r\n            const ratio = vtBufsSize / bufferSize;\r\n            for (let ch=0; ch<2; ch++) {\r\n                const data = buffer.getChannelData(ch);\r\n                const vtBuf = vtBufs[ch];\r\n                for (let i=0; i<bufferSize; i++) {\r\n                    // 線形補間しながら波形を作成 //\r\n                    // TODO 音がまだ少し違和感あるので、スプライン補正に変更した方がいいかも //\r\n                    const idxF = i * ratio;\r\n                    const idx1 = Math.trunc(idxF);\r\n                    const idx2 = (idx1 + 1) % vtBufsSize;\r\n                    const idxR = idxF - idx1;\r\n                    const w = vtBuf[idx1] * (1 - idxR) + vtBuf[idx2] * idxR;\r\n                    data[i] = w;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import RandomUtil from '../util/random-util.js';\r\nimport InterpolationUtil from '../util/interpolation-util.js';\r\n\r\nexport default function init(argsObj) {\r\n    if (this.isStarted) return;\r\n    this.isStarted = true;\r\n\r\n    const audioContext = argsObj && argsObj.audioContext;\r\n    const picoAudio = argsObj && argsObj.picoAudio;\r\n\r\n    // AudioContextを生成 //\r\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\r\n    this.context = audioContext ? audioContext : new AudioContext();\r\n\r\n    // マスターボリューム //\r\n    // リアルタイムで音量変更するためにdestination前にgainNodeを一つ噛ませる\r\n    this.masterGainNode = this.context.createGain();\r\n    this.masterGainNode.gain.value = this.settings.masterVolume;\r\n\r\n    // 仮想サンプルレート //\r\n    const sampleRate = this.context.sampleRate;\r\n    const sampleRateVT = sampleRate >= 48000 ? 48000 : sampleRate;\r\n\r\n    // ホワイトノイズ //\r\n    if (picoAudio && picoAudio.whitenoise) { // 使いまわし\r\n        this.whitenoise = picoAudio.whitenoise;\r\n    } else {\r\n        RandomUtil.resetSeed(); // 乱数パターンを固定にする（Math.random()を使わない）\r\n        // 再生環境のサンプルレートによって音が変わってしまうので //\r\n        // 一旦仮想サンプルレートで音源を作成する //\r\n        const seLength = 1;\r\n        const sampleLength = sampleRate * seLength;\r\n        const sampleLengthVT = sampleRateVT * seLength;\r\n        const vtBufs = [];\r\n        for (let ch=0; ch<2; ch++) {\r\n            vtBufs.push(new Float32Array(sampleLengthVT));\r\n            const vtBuf = vtBufs[ch];\r\n            for (let i=0; i<sampleLengthVT; i++) {\r\n                const r = RandomUtil.random();\r\n                vtBuf[i] = r * 2 - 1;\r\n            }\r\n        }\r\n        // 仮想サンプルレート音源を本番音源に変換する //\r\n        this.whitenoise = this.context.createBuffer(2, sampleLength, sampleRate);\r\n        InterpolationUtil.lerpWave(this.whitenoise, vtBufs);\r\n    }\r\n\r\n    // リバーブ用のインパルス応答音声データ作成（てきとう） //\r\n    if (picoAudio && picoAudio.impulseResponse) { // 使いまわし\r\n        this.impulseResponse = picoAudio.impulseResponse;\r\n    } else {\r\n        RandomUtil.resetSeed(); // 乱数パターンを固定にする（Math.random()を使わない）\r\n        // 再生環境のサンプルレートによって音が変わってしまうので //\r\n        // 一旦仮想サンプルレートで音源を作成する //\r\n        const seLength = 3.5;\r\n        const sampleLength = sampleRate * seLength;\r\n        const sampleLengthVT = sampleRateVT * seLength;\r\n        const vtBufs = [];\r\n        for (let ch=0; ch<2; ch++) {\r\n            vtBufs.push(new Float32Array(sampleLengthVT));\r\n            const vtBuf = vtBufs[ch];\r\n            for (let i=0; i<sampleLengthVT; i++) {\r\n                const v = ((sampleLengthVT - i) / sampleLengthVT);\r\n                const s = i / sampleRateVT;\r\n                const d = (s < 0.030 ? 0 : v)\r\n                    * (s >= 0.030 && s < 0.031 ? v*2 : v)\r\n                    * (s >= 0.040 && s < 0.042 ? v*1.5 : v)\r\n                    * (s >= 0.050 && s < 0.054 ? v*1.25 : v)\r\n                    * RandomUtil.random() * 0.2 * Math.pow((v-0.030), 4);\r\n                vtBuf[i] = d;\r\n            }\r\n        }\r\n        // 仮想サンプルレート音源を本番音源に変換する //\r\n        this.impulseResponse = this.context.createBuffer(2, sampleLength, this.context.sampleRate);\r\n        InterpolationUtil.lerpWave(this.impulseResponse, vtBufs);\r\n    }\r\n\r\n    // リバーブ用のAudioNode作成・接続 //\r\n    this.convolver = this.context.createConvolver();\r\n    this.convolver.buffer = this.impulseResponse;\r\n    this.convolver.normalize = true;\r\n    this.convolverGainNode = this.context.createGain();\r\n    this.convolverGainNode.gain.value = this.settings.reverbVolume;\r\n    this.convolver.connect(this.convolverGainNode);\r\n    this.convolverGainNode.connect(this.masterGainNode);\r\n    this.masterGainNode.connect(this.context.destination);\r\n\r\n    // コーラス用のAudioNode作成・接続 //\r\n    this.chorusDelayNode = this.context.createDelay();\r\n    this.chorusGainNode = this.context.createGain();\r\n    this.chorusOscillator = this.context.createOscillator();\r\n    this.chorusLfoGainNode = this.context.createGain();\r\n    this.chorusDelayNode.delayTime.value = 0.025;\r\n    this.chorusLfoGainNode.gain.value = 0.010;\r\n    this.chorusOscillator.frequency.value = 0.05;\r\n    this.chorusGainNode.gain.value = this.settings.chorusVolume;\r\n    this.chorusOscillator.connect(this.chorusLfoGainNode);\r\n    this.chorusLfoGainNode.connect(this.chorusDelayNode.delayTime);\r\n    this.chorusDelayNode.connect(this.chorusGainNode);\r\n    this.chorusGainNode.connect(this.masterGainNode);\r\n    this.masterGainNode.connect(this.context.destination);\r\n    this.chorusOscillator.start(0);\r\n}","\r\nexport class Performance {\r\n    static now() {\r\n        // Unsupport performance.now()\r\n        if (this._now == null) {\r\n            if (typeof window.performance === \"undefined\") {\r\n                this._now = () => { return window.Date.now(); };\r\n            } else {\r\n                this._now = () => { return window.performance.now(); };\r\n            }\r\n        }\r\n        return this._now();\r\n    }\r\n}\r\n\r\nexport class Number {\r\n    static MAX_SAFE_INTEGER() { return 0x1FFFFFFFFFFFFF; }\r\n}","import {Performance} from '../util/ponyfill.js';\r\n\r\nexport default function setData(data) {\r\n    if (this.debug) {\r\n        var syoriTimeS = Performance.now();\r\n    }\r\n\r\n    if (this.states.isPlaying) this.stop();\r\n\r\n    this.playData = data;\r\n    this.settings.resolution = data.header.resolution;\r\n    this.settings.tempo = data.tempo || 120;\r\n    this.tempoTrack = data.tempoTrack;\r\n    this.cc111Time = data.cc111Time;\r\n    this.firstNoteOnTiming = data.firstNoteOnTiming;\r\n    this.lastNoteOffTiming = data.lastNoteOffTiming;\r\n    this.firstNoteOnTime = data.firstNoteOnTime;\r\n    this.lastNoteOffTime = data.lastNoteOffTime;\r\n    this.initStatus();\r\n\r\n    if (this.debug) {\r\n        const syoriTimeE = Performance.now();\r\n        console.log(\"setData time\", syoriTimeE - syoriTimeS);\r\n    }\r\n\r\n    return this;\r\n}","export default function initStatus(isSongLooping, isLight) {\r\n    // WebMIDI使用中の場合、initStatus()連打の対策 //\r\n    if (this.settings.isWebMIDI) { \r\n        if (this.states.webMIDIWaitState != null) return;\r\n    }\r\n\r\n    // 演奏中の場合、停止する //\r\n    this.stop(isSongLooping);\r\n\r\n    // statesを初期化 //\r\n    this.states = {\r\n        isPlaying: false,\r\n        startTime: 0,\r\n        stopTime: 0,\r\n        stopFuncs: [],\r\n        webMIDIWaitState: null,\r\n        webMIDIStopTime: this.states.webMIDIStopTime,\r\n        playIndices: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n        updateBufTime: this.states.updateBufTime,\r\n        updateBufMaxTime: this.states.updateBufMaxTime,\r\n        updateIntervalTime: this.states.updateIntervalTime,\r\n        latencyLimitTime: this.states.latencyLimitTime,\r\n        noteOnAry: [],\r\n        noteOffAry: []\r\n    };\r\n\r\n    // WebMIDIの初期化・リセットメッセージ送信 //\r\n    if (this.settings.isWebMIDI && !isLight) {\r\n        if (isSongLooping)\r\n            return;\r\n        if (this.settings.WebMIDIPortOutput == null) {\r\n            this.startWebMIDI();\r\n            return;\r\n        }\r\n        if (this.settings.WebMIDIPortSysEx) {\r\n            // GM1システム・オン\r\n            this.settings.WebMIDIPortOutput.send([0xF0, 0x7E, 0x7F, 0x09, 0x01, 0xF7]);\r\n        } else {\r\n            // SysExの使用が拒否されているので、できる限り設定値を初期値に戻す\r\n            for (let t=0; t<16; t++) {\r\n                this.settings.WebMIDIPortOutput.send([0xC0+t, 0]);\r\n                this.settings.WebMIDIPortOutput.send([0xE0+t, 0, 64]);\r\n                // ピッチあたりのずれがひどくなる場合がある よくわからない\r\n                this.settings.WebMIDIPortOutput.send([0xB0+t, 100, 0]);\r\n                this.settings.WebMIDIPortOutput.send([0xB0+t, 101, 0]);\r\n                this.settings.WebMIDIPortOutput.send([0xB0+t, 6, 2]); //pitchbend\r\n                this.settings.WebMIDIPortOutput.send([0xB0+t, 100, 1]);\r\n                this.settings.WebMIDIPortOutput.send([0xB0+t, 96, 0]);\r\n                this.settings.WebMIDIPortOutput.send([0xB0+t, 97, 64]); //tuning?\r\n                this.settings.WebMIDIPortOutput.send([0xB0+t, 7, 100]); // volume\r\n                this.settings.WebMIDIPortOutput.send([0xB0+t, 10, 64]); // pan\r\n                this.settings.WebMIDIPortOutput.send([0xB0+t, 11, 127]); // expression\r\n                //this.settings.WebMIDIPortOutput.send([0xB0+t, 91, 40]); // リバーブ以外のエフェクトに設定される場合がありそうなのでコメントアウト\r\n                //this.settings.WebMIDIPortOutput.send([0xB0+t, 93, 0]); // コーラス以外のエフェクトに設定されるのか音が出なくなる場合があるのでコメントアウト\r\n                this.settings.WebMIDIPortOutput.send([0xB0+t, 98, 0]);\r\n                this.settings.WebMIDIPortOutput.send([0xB0+t, 99, 0]);\r\n                //this.settings.WebMIDIPortOutput.send([0xB0+t, 121, 0]);\r\n                this.settings.WebMIDIPortOutput.send([0xB0+t, 122, 0]);\r\n            }\r\n        }\r\n    }\r\n}","export default class ArrayUtil extends Array {\r\n    /**\r\n     * 配列から要素１つを削除する\r\n     * \r\n     *     Array.splice(index, 1); を高速化する\r\n     *     特に配列末尾、又は配列先頭を削除するときに高速処理が期待できる\r\n     * @param {Array} array 配列\r\n     * @param {number} index 添え字\r\n     */\r\n    static delete(array, index) {\r\n        if (index == array.length-1) array.pop(); // 配列末尾をArray.pop()で削除すると高速化する\r\n        else if (index == 0) array.shift(); // 配列先頭をArray.shift()で削除すると高速化する（あまり変わらない環境もある）\r\n        else array.splice(index, 1); // 配列先頭・末尾以外を削除する場合はArray.splice()で削除する\r\n    }\r\n}","export default class ParseUtil {\r\n    /**\r\n     * バイト配列内に含まれる\"データ長\"を数値に変換する\r\n     * @param {Uint8Array} arr バイト配列\r\n     * @param {number} startIdx データ長の始点の場所(index)\r\n     * @param {number} endIdx データ長の終点の場所(index) - 1\r\n     * @returns {number} データ長\r\n     */\r\n    static getInt(arr, startIdx, endIdx) {\r\n        let value = 0;\r\n        for (let i=startIdx; i<endIdx; i++) {\r\n            value = (value << 8) + arr[i];\r\n        }\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * バイト配列内に含まれる\"可変長のデータ長\"を数値に変換する\r\n     * @param {Uint8Array} arr バイト配列\r\n     * @param {number} startIdx データ長の始点の場所(index)\r\n     * @param {number} endIdx データ長の終点の場所(index) - 1 (終点の場所は多くてもかまわない)\r\n     * @returns {Array} [データ長, \"可変長のデータ長\"のバイト数]\r\n     */\r\n    static variableLengthToInt(arr, startIdx, endIdx) {\r\n        let i = startIdx;\r\n        let value = 0;\r\n        while (i < endIdx-1 && arr[i] >= 0x80) {\r\n            if (i < startIdx+4) value = (value<<7) + (arr[i]-0x80);\r\n            i++;\r\n        }\r\n        value = (value<<7) + arr[i];\r\n        i++;\r\n        return [value, i-startIdx];\r\n    }\r\n\r\n    /**\r\n     * デルタタイムの順番になるように配列に挿入\r\n     * @param {PicoAudio} that PicoAudioインスタンス\r\n     * @param {number} ch チャンネル番号\r\n     * @param {number} time デルタタイム\r\n     * @param {number} p 対象のMIDIイベントの場所(SMFデータ内の位置)\r\n     * @param {number} len MIDIイベントの長さ\r\n     */\r\n    static chIndicesInsert(that, ch, time, p, len) {\r\n        const indices = ch.indices;\r\n\r\n        // デルタタイムの順番になるようにリスト配列に挿入 //\r\n        if (ch.indicesLength >= 4 && time < indices[ch.indicesFoot]) {\r\n            // Insert //\r\n            while (ch.indicesCur != -1) {\r\n                if (time<indices[ch.indicesCur]) {\r\n                    if (ch.indicesCur == ch.indicesHead) {\r\n                        ch.indicesHead = ch.indicesLength;\r\n                    } else {\r\n                        indices[ch.indicesPre+3] = ch.indicesLength;\r\n                    }\r\n                    indices[ch.indicesLength] = time;\r\n                    indices[ch.indicesLength+1] = len;\r\n                    indices[ch.indicesLength+2] = p;\r\n                    indices[ch.indicesLength+3] = ch.indicesCur;\r\n                    ch.indicesPre = ch.indicesLength;\r\n                    ch.indicesLength += 4;\r\n                    break;\r\n                }\r\n                ch.indicesPre = ch.indicesCur;\r\n                ch.indicesCur = indices[ch.indicesCur+3];\r\n            }\r\n        } else {\r\n            // Push //\r\n            if (ch.indicesLength >= 4) {\r\n                indices[ch.indicesFoot+3] = ch.indicesLength;\r\n            } else {\r\n                ch.indicesHead = 0;\r\n            }\r\n            ch.indicesFoot = ch.indicesLength;\r\n            indices[ch.indicesLength] = time;\r\n            indices[ch.indicesLength+1] = len;\r\n            indices[ch.indicesLength+2] = p;\r\n            indices[ch.indicesLength+3] = -1;\r\n            ch.indicesLength += 4;\r\n        }\r\n    }\r\n}","import ArrayUtil from '../../util/array-util.js';\r\nimport ParseUtil from '../../util/parse-util.js';\r\nimport {Performance} from '../../util/ponyfill.js';\r\n\r\nexport default class UpdateNote {\r\n    /**\r\n     * 1ms毎処理用の変数を初期化\r\n     */\r\n    static init(picoAudio, currentTime) {\r\n        this.updatePreTime = Performance.now();\r\n        this.pPreTime = Performance.now();\r\n        this.cPreTime = picoAudio.context.currentTime * 1000;\r\n        this.pTimeSum = 0;\r\n        this.cTimeSum = 0;\r\n        this.cnt = 0;\r\n        this.initCurrentTime = currentTime;\r\n    }\r\n\r\n    /**\r\n     * 再生中、1ms毎に呼ばれるコールバック\r\n     * （ブラウザの制限で実際は最短4ms毎に呼ばれる）\r\n     * @returns {number} 現在の時間\r\n     */\r\n    static update(picoAudio) {\r\n        const context = picoAudio.context;\r\n        const settings = picoAudio.settings;\r\n        const states = picoAudio.states;\r\n        const updateNowTime = Performance.now();\r\n        const updatePreTime = this.updatePreTime;\r\n        let pPreTime = this.pPreTime;\r\n        let cPreTime = this.cPreTime;\r\n        let pTimeSum = this.pTimeSum;\r\n        let cTimeSum = this.cTimeSum;\r\n        let cnt = this.cnt;\r\n\r\n        // サウンドが重くないか監視（フリーズ対策） //\r\n        //   performance.now()とAudioContext.currentTimeの時間差を計算し\r\n        //   AudioContext.currentTimeが遅れていたら処理落ちしていると判断する\r\n        let updateBufTime = updateNowTime - updatePreTime;\r\n        const pTime = updateNowTime;\r\n        const cTime = context.currentTime * 1000;\r\n        pTimeSum += pTime - pPreTime;\r\n        cTimeSum += cTime - cPreTime;\r\n        pPreTime = pTime;\r\n        cPreTime = cTime;\r\n        const latencyTime = pTimeSum - cTimeSum;\r\n        states.latencyTime = latencyTime;\r\n\r\n        // サウンドが重い場合、負荷軽減処理を発動するリミットを上げていく //\r\n        if (latencyTime >= 100) { // currentTimeが遅い（サウンドが重い）\r\n            states.latencyLimitTime += latencyTime;\r\n            cTimeSum += 100;\r\n        } else if (latencyTime <= -100) { // currentTimeが速い（誤差）\r\n            cTimeSum = pTimeSum;\r\n        } else {\r\n            if (states.latencyLimitTime > 0) { // currentTimeが丁度いい\r\n                states.latencyLimitTime -= updateBufTime*0.003;\r\n                if (states.latencyLimitTime < 0) states.latencyLimitTime = 0;\r\n            }\r\n        }\r\n\r\n        // ノートを先読み度合いを自動調整（予約しすぎると重くなる） //\r\n        states.updateIntervalTime = updateBufTime;\r\n        if (states.updateBufTime < updateBufTime) { // 先読み遅れている場合\r\n            states.updateBufTime = updateBufTime;\r\n        } else { // 先読み量に余裕がある場合\r\n            // 先読み量を少しずつ減らす //\r\n            if (states.updateBufMaxTime > 350) {\r\n                states.updateBufMaxTime -= states.updateBufMaxTime*0.002;\r\n            }\r\n            // 先読み量を少しずつ増やす //\r\n            if (states.updateBufTime < 20) {\r\n                states.updateBufTime += states.updateBufTime*0.0005;\r\n            }\r\n            if (states.updateBufMaxTime >= 10 && states.updateBufMaxTime < 340) {\r\n                states.updateBufMaxTime += states.updateBufMaxTime*0.002;\r\n            }\r\n        }\r\n        // 先読み量が足りなくなった場合\r\n        if (states.updateBufTime > states.updateBufMaxTime) {\r\n            if (updateBufTime >= 900 && states.latencyLimitTime <= 150) {\r\n                // バックグラウンドっぽくて重くない場合、バックグラウンド再生\r\n                states.updateBufMaxTime += updateBufTime;\r\n            } else { // 通常\r\n                const tempTime = updateBufTime - states.updateBufMaxTime;\r\n                states.updateBufTime = states.updateBufMaxTime;\r\n                \r\n                // 先読み量が小さい場合大きくする\r\n                if (states.updateBufMaxTime < 10) {\r\n                    states.updateBufTime = states.updateBufMaxTime;\r\n                    states.updateBufMaxTime *= 1.25;\r\n                } else {\r\n                    states.updateBufMaxTime += tempTime / 2;\r\n                }\r\n            }\r\n            if (states.updateBufMaxTime > 1100) states.updateBufMaxTime = 1100;\r\n        }\r\n\r\n        // サウンドが重すぎる場合、先読み度合いを小さくして負荷軽減 //\r\n        if (states.latencyLimitTime > 150) {\r\n            cTimeSum = pTimeSum;\r\n            states.latencyLimitTime -= 5;\r\n            if (states.latencyLimitTime > 1000) states.latencyLimitTime = 1000;\r\n            // ノート先読みをかなり小さくする（フリーズ対策）\r\n            states.updateBufMaxTime = 1;\r\n            states.updateBufTime = 1;\r\n            updateBufTime = 1;\r\n        }\r\n\r\n        // 再生処理 //\r\n        for (let ch=0; ch<16; ch++) {\r\n            const notes = picoAudio.playData.channels[ch].notes;\r\n            let idx = states.playIndices[ch];\r\n            for (; idx<notes.length; idx++) {\r\n                const note = notes[idx];\r\n                const curTime = cnt == 0 ? this.initCurrentTime - states.startTime\r\n                    : context.currentTime - states.startTime;\r\n\r\n                // 終わったノートは演奏せずにスキップ\r\n                if (curTime >= note.stopTime) continue;\r\n                // （シークバーで途中から再生時）startTimeが過ぎたものは鳴らさない\r\n                if (cnt == 0 && curTime > note.startTime+0.05) continue;\r\n                // AudioParam.setValueAtTime()等でマイナスが入るとエラーになるので対策\r\n                if (curTime + note.startTime < 0) continue;\r\n                // 演奏開始時間 - 先読み時間(ノート予約) になると演奏予約or演奏開始\r\n                if (curTime < note.startTime - states.updateBufTime/1000) break;\r\n\r\n                // PicoAudio音源の再生処理 //\r\n                if (!settings.isWebMIDI) { \r\n                    // 予約ノート数が急激に増えそうな時、先読み量を小さくしておく //\r\n                    if (states.stopFuncs.length >= 350 && states.updateBufTime < 1000) {\r\n                        states.updateBufTime = 12;\r\n                        states.updateBufMaxTime = states.updateBufTime;\r\n                    }\r\n\r\n                    // レトロモード（和音制限モード） //\r\n                    if (settings.maxPoly != -1 || settings.maxPercPoly != -1) {\r\n                        let polyCnt = 0;\r\n                        let percCnt = 0;\r\n                        states.stopFuncs.forEach((tar) => {\r\n                            if (!tar.note) return;\r\n                            if (tar.note.channel != 9) {\r\n                                if (note.start >= tar.note.start && note.start < tar.note.stop) {\r\n                                    polyCnt++;\r\n                                }\r\n                            } else {\r\n                                if (note.start == tar.note.start) {\r\n                                    percCnt++;\r\n                                }\r\n                            }\r\n                        });\r\n                        if ((note.channel != 9 && polyCnt >= settings.maxPoly)\r\n                            || (note.channel == 9 && percCnt >= settings.maxPercPoly)) {\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    // １ノート分の再生処理（WebAudioで再生） //\r\n                    const stopFunc =\r\n                        note.channel != 9 ? picoAudio.createNote(note)\r\n                        : picoAudio.createPercussionNote(note);\r\n                    if (!stopFunc) continue; // 無音の場合、処理しない\r\n                    picoAudio.pushFunc({\r\n                        note: note,\r\n                        stopFunc: stopFunc\r\n                    });\r\n                }\r\n                states.noteOnAry.push(note);\r\n            }\r\n            // notesのどこまで再生したかを記憶して、次回コールバック時にそこから処理を始める\r\n            states.playIndices[ch] = idx;\r\n        }\r\n\r\n        // noteOnの時間になったか監視 //\r\n        this.checkNoteOn(picoAudio);\r\n\r\n        // noteOffの時間になったか監視 //\r\n        this.checkNoteOff(picoAudio);\r\n\r\n        // WebMIDIの再生処理 //\r\n        if (settings.isWebMIDI && settings.WebMIDIPortOutput != null) {\r\n            const messages = picoAudio.playData.messages;\r\n            const smfData = picoAudio.playData.smfData;\r\n            let idx = states.playIndices[16]; // 17chはWebMIDI用\r\n            for (; idx<messages.length; idx++) {\r\n                const message = messages[idx];\r\n                const curTime = context.currentTime - states.startTime;\r\n\r\n                // 終わったノートは演奏せずにスキップ\r\n                if (curTime > message.time + 1) continue;\r\n                // 演奏開始時間 - 先読み時間(ノート予約) になると演奏予約or演奏開始\r\n                if (curTime < message.time - 1) break;\r\n\r\n                // WebMIDIでMIDIメッセージを送信する処理 //\r\n                const pLen = message.smfPtrLen;\r\n                const p = message.smfPtr;\r\n                const time = message.time;\r\n                const state = smfData[p];\r\n                if (state!=0xff) {\r\n                    try {\r\n                        if (state==0xF0 || state==0xF7) {\r\n                            // sysExのMIDIメッセージ\r\n                            if (settings.WebMIDIPortSysEx) {\r\n                                // 長さ情報を取り除いて純粋なSysExメッセージにする\r\n                                const lengthAry = ParseUtil.variableLengthToInt(smfData, p+1, p+1+4);\r\n                                const sysExStartP = p+1+lengthAry[1];\r\n                                const sysExEndP = sysExStartP+lengthAry[0];\r\n                                const webMIDIMes = new Uint8Array(1 + lengthAry[0]);\r\n                                webMIDIMes[0] = state;\r\n                                const size = sysExEndP - sysExStartP;\r\n                                for (let i=0; i<size; i++)\r\n                                    webMIDIMes[i+1] = smfData[sysExStartP + i];\r\n                                settings.WebMIDIPortOutput.send(webMIDIMes,\r\n                                    (time - context.currentTime + Performance.now()/1000 + states.startTime) * 1000);\r\n                            }\r\n                        } else {\r\n                            // sysEx以外のMIDIメッセージ\r\n                            const sendMes = [];\r\n                            for (let i=0; i<pLen; i++) sendMes.push(smfData[p+i]);\r\n                            settings.WebMIDIPortOutput.send(sendMes,\r\n                                (time - context.currentTime + Performance.now()/1000 + states.startTime) * 1000);\r\n                        }\r\n                    } catch(e) {\r\n                        console.log(e, p, pLen, time, state);\r\n                    }\r\n                }\r\n            }\r\n            // messagesのどこまで送信したかを記憶して、次回コールバック時にそこから処理を始める\r\n            states.playIndices[16] = idx;\r\n        }\r\n\r\n        // 1msコールバックが呼ばれた回数をカウント\r\n        cnt ++;\r\n\r\n        // 変数を反映 //\r\n        this.updatePreTime = updateNowTime;\r\n        this.pPreTime = pPreTime;\r\n        this.cPreTime = cPreTime;\r\n        this.pTimeSum = pTimeSum;\r\n        this.cTimeSum = cTimeSum;\r\n        this.cnt = cnt;\r\n    }\r\n\r\n    /**\r\n     * noteOnの時間になったか監視\r\n     * @param {PicoAudio} picoAudio PicoAudioインスタンス\r\n     */\r\n    static checkNoteOn(picoAudio) {\r\n        const context = picoAudio.context;\r\n        const trigger = picoAudio.trigger;\r\n        const states = picoAudio.states;\r\n        const noteOnAry = picoAudio.states.noteOnAry;\r\n        const noteOffAry = picoAudio.states.noteOffAry;\r\n\r\n        for (let i=0; i<noteOnAry.length; i++) {\r\n            const tempNote = noteOnAry[i];\r\n            const nowTime = context.currentTime - states.startTime;\r\n            if (tempNote.startTime - nowTime <= 0) {\r\n                ArrayUtil.delete(noteOnAry, i); // noteOnAry.splice(i, 1); の高速化\r\n                noteOffAry.push(tempNote);\r\n\r\n                // イベント発火\r\n                if (trigger.isNoteTrigger) trigger.noteOn(tempNote);\r\n                picoAudio.fireEvent('noteOn', tempNote);\r\n\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * noteOffの時間になったか監視\r\n     * @param {PicoAudio} picoAudio PicoAudioインスタンス\r\n     */\r\n    static checkNoteOff(picoAudio) {\r\n        const context = picoAudio.context;\r\n        const trigger = picoAudio.trigger;\r\n        const states = picoAudio.states;\r\n        const noteOffAry = picoAudio.states.noteOffAry;\r\n\r\n        for (let i=0; i<noteOffAry.length; i++) {\r\n            const tempNote = noteOffAry[i];\r\n            const nowTime = context.currentTime - states.startTime;\r\n            if ((tempNote.channel != 9 && tempNote.stopTime - nowTime <= 0)\r\n                || (tempNote.channel == 9 && tempNote.drumStopTime - nowTime <= 0)) {\r\n                ArrayUtil.delete(noteOffAry, i); // noteOffAry.splice(i, 1); の高速化\r\n                picoAudio.clearFunc(\"note\", tempNote);\r\n\r\n                // イベント発火\r\n                if (trigger.isNoteTrigger) trigger.noteOff(tempNote);\r\n                picoAudio.fireEvent('noteOff', tempNote);\r\n\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n}","import UpdateNote from './play/update-note.js';\r\nimport {Number} from '../util/ponyfill.js';\r\n\r\nexport default function play(isSongLooping) {\r\n    const context = this.context;\r\n    const settings = this.settings;\r\n    const trigger = this.trigger;\r\n    const states = this.states;\r\n\r\n    // 再生中の場合、処理しない //\r\n    if (states.isPlaying) return;\r\n\r\n    // WebMIDIの場合、少し待ってから再生する //\r\n    if (settings.isWebMIDI && !isSongLooping) {\r\n        // Web MIDI API使用時はstop()から800ms程待機すると音がバグりにくい\r\n        if (states.webMIDIWaitState != \"completed\") {\r\n            if (states.webMIDIWaitState != \"waiting\") { // play()連打の対策\r\n                // stop()から1000ms後にplay()を実行\r\n                states.webMIDIWaitState = \"waiting\";\r\n                let waitTime = 1000 - (context.currentTime - states.webMIDIStopTime)*1000;\r\n                if (states.webMIDIStopTime == 0) waitTime = 1000; // MIDI Portをopenして最初に呼び出すときも少し待つ\r\n                setTimeout(() => {\r\n                    states.webMIDIWaitState = \"completed\";\r\n                    states.isPlaying = false;\r\n                    this.play();\r\n                }, waitTime);\r\n            }\r\n            return;\r\n        } else {\r\n            states.webMIDIWaitState = null;\r\n        }\r\n    }\r\n\r\n    // 変数を用意 //\r\n    const currentTime = context.currentTime;\r\n    this.isPlayed = true;\r\n    states.isPlaying = true;\r\n    states.startTime = !states.startTime && !states.stopTime ? currentTime : (states.startTime + currentTime - states.stopTime);\r\n    states.stopFuncs = [];\r\n\r\n    // 冒頭の余白をスキップ //\r\n    if (settings.isSkipBeginning) {\r\n        const firstNoteOnTime = this.firstNoteOnTime;\r\n        if (-states.startTime + currentTime < firstNoteOnTime) {\r\n            this.setStartTime(firstNoteOnTime + states.startTime - currentTime);\r\n        }\r\n    }\r\n\r\n    // 曲終了コールバックを予約 //\r\n    let reserveSongEnd;\r\n    const reserveSongEndFunc = () => {\r\n        this.clearFunc(\"rootTimeout\", reserveSongEnd);\r\n        const finishTime = (settings.isCC111 && this.cc111Time != -1) ? this.lastNoteOffTime : this.getTime(Number.MAX_SAFE_INTEGER());\r\n        if (finishTime - context.currentTime + states.startTime <= 0) {\r\n            // 予定の時間以降に曲終了\r\n            trigger.songEnd();\r\n            this.onSongEnd();\r\n            this.fireEvent('songEnd');\r\n        } else {\r\n            // 処理落ちしたりしてまだ演奏中の場合、1ms後に曲終了コールバックを呼び出すよう予約\r\n            reserveSongEnd = setTimeout(reserveSongEndFunc, 1);\r\n            this.pushFunc({\r\n                rootTimeout: reserveSongEnd,\r\n                stopFunc: () => { clearTimeout(reserveSongEnd); }\r\n            });\r\n        }\r\n    };\r\n    const finishTime = settings.isCC111 && this.cc111Time != -1\r\n        ? this.lastNoteOffTime\r\n        : this.getTime(Number.MAX_SAFE_INTEGER());\r\n    const reserveSongEndTime = (finishTime - context.currentTime + states.startTime) * 1000;\r\n    reserveSongEnd = setTimeout(reserveSongEndFunc, reserveSongEndTime);\r\n    this.pushFunc({\r\n        rootTimeout: reserveSongEnd,\r\n        stopFunc: () => { clearTimeout(reserveSongEnd); }\r\n    });\r\n\r\n    // 再生開始をコールバックに通知 //\r\n    trigger.play();\r\n    this.fireEvent('play');\r\n\r\n    // 1ms毎コールバックの準備 //\r\n    UpdateNote.init(this, currentTime);\r\n\r\n    // 1ms毎コールバックを開始 //\r\n    const reserve = setInterval(() => {\r\n        UpdateNote.update(this);\r\n    }, 1);\r\n    this.pushFunc({\r\n        rootTimeout: reserve,\r\n        stopFunc: () => { clearInterval(reserve); }\r\n    });\r\n}","export default function stop(isSongLooping) {\r\n    const states = this.states;\r\n\r\n    // 再生していない場合、何もしない //\r\n    if (states.isPlaying == false) return;\r\n\r\n    // ステータスを停止状態にする・終了処理を呼ぶ //\r\n    states.isPlaying = false;\r\n    states.stopTime = this.context.currentTime;\r\n    states.stopFuncs.forEach((n) => { // 再生中の音の停止関数を呼ぶ\r\n        n.stopFunc();\r\n    });\r\n    states.stopFuncs = [];\r\n    states.playIndices.forEach((n, i, ary) => {\r\n        ary[i] = 0;\r\n    });\r\n    states.noteOnAry = [];\r\n    states.noteOffAry = [];\r\n\r\n    // WebMIDIで再生中の場合、停止メッセージを送信 //\r\n    if (this.settings.isWebMIDI) {\r\n        if (isSongLooping)\r\n            return;\r\n        if (this.settings.WebMIDIPortOutput == null)\r\n            return;\r\n        states.webMIDIStopTime = this.context.currentTime;\r\n        setTimeout(() => {\r\n            for (let t=0; t<16; t++) {\r\n                this.settings.WebMIDIPortOutput.send([0xB0+t, 120, 0]);\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    // 停止をコールバックに通知 //\r\n    this.trigger.stop();\r\n    this.fireEvent('stop');\r\n}","export default function createBaseNote(option, isDrum, isExpression, nonChannel, nonStop) {\r\n    // 最低限の変数を準備（無音の場合は処理終了するため） //\r\n    const settings = this.settings;\r\n    const context = this.context;\r\n    const songStartTime = this.states.startTime;\r\n    const channel = nonChannel ? 0 : (option.channel || 0);\r\n    const velocity = (option.velocity) * Number(nonChannel ? 1 : (this.channels[channel][2] != null ? this.channels[channel][2] : 1)) * settings.generateVolume;\r\n    let isGainValueZero = true;\r\n\r\n    // 無音の場合は処理終了 //\r\n    if (velocity <= 0) return {isGainValueZero: true};\r\n\r\n    // 音量の変化を設定 //\r\n    const expGainValue = velocity * ((option.expression ? option.expression[0].value : 100) / 127);\r\n    const expGainNode = context.createGain();\r\n    expGainNode.gain.value = expGainValue;\r\n    if (isExpression) {\r\n        option.expression ? option.expression.forEach((p) => {\r\n            const v = velocity * (p.value / 127);\r\n            if (v > 0) isGainValueZero = false;\r\n            expGainNode.gain.setValueAtTime(\r\n                v,\r\n                p.time + songStartTime\r\n            );\r\n        }) : false;\r\n    } else {\r\n        if (expGainValue > 0) {\r\n            isGainValueZero = false;\r\n        }\r\n    }\r\n\r\n    // 無音の場合は処理終了 //\r\n    if (isGainValueZero) { // 音量が常に0なら音を鳴らさない\r\n        return {isGainValueZero: true};\r\n    }\r\n\r\n    // 全ての変数を準備 //\r\n    const start = option.startTime + songStartTime;\r\n    const stop = option.stopTime + songStartTime;\r\n    const pitch = settings.basePitch * Math.pow(Math.pow(2, 1/12), (option.pitch || 69) - 69);\r\n    const oscillator = !isDrum ? context.createOscillator() : context.createBufferSource();\r\n    const panNode = context.createStereoPanner ? context.createStereoPanner()\r\n        : context.createPanner ? context.createPanner()\r\n        : { pan: { setValueAtTime: ()=>{} } };\r\n    const gainNode = context.createGain();\r\n    const stopGainNode = context.createGain();\r\n\r\n    // ドラムはホワイトノイズ、ドラム以外はoscillatorを設定 //\r\n    // oscillatorはピッチ変動も設定 //\r\n    if (!isDrum) {\r\n        oscillator.type = option.type || \"sine\";\r\n        oscillator.detune.value = 0;\r\n        oscillator.frequency.value = pitch;\r\n        option.pitchBend ? option.pitchBend.forEach((p) => {\r\n            oscillator.frequency.setValueAtTime(\r\n                settings.basePitch * Math.pow(Math.pow(2, 1/12), option.pitch - 69 + p.value),\r\n                p.time + songStartTime\r\n            );\r\n        }) : false;\r\n    } else {\r\n        oscillator.loop = true;\r\n        oscillator.buffer = this.whitenoise;\r\n    }\r\n\r\n    // パンの初期値を設定 //\r\n    const panValue = option.pan && option.pan[0].value != 64 ? (option.pan[0].value / 127) * 2 - 1 : 0;\r\n    initPanValue(context, panNode, panValue);\r\n\r\n    // パンの変動を設定 //\r\n    if (context.createStereoPanner || context.createPanner) {\r\n        // StereoPannerNode or PannerNode がどちらかでも使える\r\n        let firstNode = true;\r\n        if (context.createStereoPanner) {\r\n            // StereoPannerNode が使える\r\n            option.pan ? option.pan.forEach((p) => {\r\n                if (firstNode) {\r\n                    firstNode = false;\r\n                    return;\r\n                }\r\n                let v = p.value == 64 ? 0 : (p.value / 127) * 2 - 1;\r\n                if (v > 1.0) v = 1.0;\r\n                panNode.pan.setValueAtTime(\r\n                    v,\r\n                    p.time + songStartTime\r\n                );\r\n            }) : false;\r\n        } else if (context.createPanner) {\r\n            // StereoPannerNode が未サポート、PannerNode が使える\r\n            if (panNode.positionX) {\r\n                // setValueAtTimeが使える\r\n                // Old Browser\r\n                let firstPan = true;\r\n                option.pan ? option.pan.forEach((p) => {\r\n                    if (firstPan) {\r\n                        firstPan = false;\r\n                        return;\r\n                    }\r\n                    const v = p.value == 64 ? 0 : (p.value / 127) * 2 - 1;\r\n                    const posObj = convPosition(v);\r\n                    panNode.positionX.setValueAtTime(posObj.x, p.time + songStartTime);\r\n                    panNode.positionY.setValueAtTime(posObj.y, p.time + songStartTime);\r\n                    panNode.positionZ.setValueAtTime(posObj.z, p.time + songStartTime);\r\n                }) : false;\r\n            } else {\r\n                // iOS\r\n                // setValueAtTimeが使えないためsetTimeoutでパンの動的変更\r\n                option.pan ? option.pan.forEach((p) => {\r\n                    if (firstNode) {\r\n                        firstNode = false;\r\n                        return;\r\n                    }\r\n                    const reservePan = setTimeout(() => {\r\n                        this.clearFunc(\"pan\", reservePan);\r\n                        let v = p.value == 64 ? 0 : (p.value / 127) * 2 - 1;\r\n                        if (v > 1.0) v = 1.0;\r\n                        const posObj = convPosition(v);\r\n                        panNode.setPosition(posObj.x, posObj.y, posObj.z);\r\n                    }, (p.time + songStartTime - context.currentTime) * 1000);\r\n                    this.pushFunc({\r\n                        pan: reservePan,\r\n                        stopFunc: () => { clearTimeout(reservePan); }\r\n                    });\r\n                }) : false;\r\n            }\r\n        }\r\n        oscillator.connect(panNode);\r\n        panNode.connect(expGainNode);\r\n    } else {\r\n        // StereoPannerNode、PannerNode が未サポート\r\n        oscillator.connect(expGainNode);\r\n    }\r\n\r\n    // AudioNodeを接続 //\r\n    expGainNode.connect(gainNode);\r\n    gainNode.connect(stopGainNode);\r\n    stopGainNode.connect(this.masterGainNode);\r\n    this.masterGainNode.connect(context.destination);\r\n\r\n    // モジュレーションの変動を設定 //\r\n    let modulationOscillator;\r\n    let modulationGainNode;\r\n    if (!isDrum && option.modulation && (option.modulation.length >= 2 || option.modulation[0].value > 0)) {\r\n        modulationOscillator = context.createOscillator();\r\n        modulationGainNode = context.createGain();\r\n        let firstNode = true;\r\n        option.modulation ? option.modulation.forEach((p) => {\r\n            if (firstNode) {\r\n                firstNode = false;\r\n                return;\r\n            }\r\n            let m = p.value / 127;\r\n            if (m > 1.0) m = 1.0;\r\n            modulationGainNode.gain.setValueAtTime(\r\n                pitch * 10 / 440 * m,\r\n                p.time + songStartTime\r\n            );\r\n        }) : false;\r\n        let m = option.modulation ? option.modulation[0].value / 127 : 0;\r\n        if (m > 1.0) m = 1.0;\r\n        modulationGainNode.gain.value = pitch * 10 / 440 * m;\r\n        modulationOscillator.frequency.value = 6;\r\n        modulationOscillator.connect(modulationGainNode);\r\n        modulationGainNode.connect(oscillator.frequency);\r\n    }\r\n\r\n    // リバーブの変動を設定 //\r\n    if (this.settings.isReverb && option.reverb && (option.reverb.length >= 2 || option.reverb[0].value > 0)) {\r\n        const convolver = this.convolver;\r\n        const convolverGainNode = context.createGain();\r\n        let firstNode = true;\r\n        option.reverb ? option.reverb.forEach((p) => {\r\n            if (firstNode) {\r\n                firstNode = false;\r\n                return;\r\n            }\r\n            let r = p.value / 127;\r\n            if (r > 1.0) r = 1.0;\r\n            convolverGainNode.gain.setValueAtTime(\r\n                r,\r\n                p.time + songStartTime\r\n            );\r\n        }) : false;\r\n        let r = option.reverb ? option.reverb[0].value / 127 : 0;\r\n        if (r > 1.0) r = 1.0;\r\n        convolverGainNode.gain.value = r;\r\n        gainNode.connect(stopGainNode);\r\n        stopGainNode.connect(convolverGainNode);\r\n        convolverGainNode.connect(convolver);\r\n    }\r\n\r\n    // コーラスの変動を設定 //\r\n    if (this.settings.isChorus && option.chorus && (option.chorus.length >= 2 || option.chorus[0].value > 0)) {\r\n        const chorusDelayNode = this.chorusDelayNode;\r\n        const chorusGainNode = context.createGain();\r\n        let firstNode = true;\r\n        option.chorus ? option.chorus.forEach((p) => {\r\n            if (firstNode) {\r\n                firstNode = false;\r\n                return;\r\n            }\r\n            let c = p.value / 127;\r\n            if (c > 1.0) c = 1.0;\r\n            chorusGainNode.gain.setValueAtTime(\r\n                c,\r\n                p.time + songStartTime\r\n            );\r\n        }) : false;\r\n        let c = option.chorus ? option.chorus[0].value / 127 : 0;\r\n        if (c > 1.0) c = 1.0;\r\n        chorusGainNode.gain.value = c;\r\n        gainNode.connect(stopGainNode);\r\n        stopGainNode.connect(chorusGainNode);\r\n        chorusGainNode.connect(chorusDelayNode);\r\n    }\r\n\r\n    // モジュレーションをスタート //\r\n    if (modulationOscillator) {\r\n        modulationOscillator.start(start);\r\n        this.stopAudioNode(modulationOscillator, stop, modulationGainNode);\r\n    }\r\n\r\n    // oscillator又はホワイトノイズをスタート //\r\n    oscillator.start(start);\r\n    if (!isDrum && !nonChannel && !nonStop) {\r\n        this.stopAudioNode(oscillator, stop, stopGainNode);\r\n    }\r\n\r\n    // AudioNodeやパラメータを返す //\r\n    return {\r\n        start: start,\r\n        stop: stop,\r\n        pitch: pitch,\r\n        channel: channel,\r\n        velocity: velocity,\r\n        oscillator: oscillator,\r\n        panNode: panNode,\r\n        gainNode: gainNode,\r\n        stopGainNode: stopGainNode,\r\n        isGainValueZero: false\r\n    };\r\n}\r\n\r\n/**\r\n * パンの初期値を設定\r\n * @param {PannerNode | StereoPannerNode} panNode \r\n * @param {number} panValue \r\n */\r\nfunction initPanValue(context, panNode, panValue) {\r\n    if (context.createStereoPanner) {\r\n        if(panValue > 1.0) panValue = 1.0;\r\n        panNode.pan.value = panValue;\r\n    } else if(context.createPanner) {\r\n        // iOS, Old Browser\r\n        const posObj = convPosition(panValue);\r\n        panNode.panningModel = \"equalpower\";\r\n        panNode.setPosition(posObj.x, posObj.y, posObj.z);\r\n    }\r\n}\r\n\r\n/**\r\n * pan値を基に、PannerNode用の値を{x, y, z}で返す\r\n * @param {number} panValue panの値\r\n * @returns Object{x, y, z}\r\n */\r\nfunction convPosition(panValue) {\r\n    if (panValue > 1.0) panValue = 1.0;\r\n\r\n    const obj = {};\r\n    const panAngle = panValue * 90;\r\n    obj.x = Math.sin(panAngle * (Math.PI / 180));\r\n    obj.y = 0;\r\n    obj.z = -Math.cos(panAngle * (Math.PI / 180));\r\n    return obj;\r\n}","export default function createNote(option) {\r\n    const note = this.createBaseNote(option, false, true, false, true); // oscillatorのstopはこちらで実行するよう指定\r\n    if (note.isGainValueZero) return null;\r\n\r\n    const oscillator = note.oscillator;\r\n    const gainNode = note.gainNode;\r\n    const stopGainNode = note.stopGainNode;\r\n    let isPizzicato = false;\r\n    let isNoiseCut = false;\r\n\r\n    let note2;\r\n\r\n    // 音色の設定 //\r\n    switch (this.channels[note.channel][0]*1000 || option.instrument) {\r\n        // Sine\r\n        case 1000:\r\n        case  6: case 15: case 24: case 26: case 46: case 50: case 51:\r\n        case 52: case 53: case 54: case 82: case 85: case 86:\r\n        {\r\n            oscillator.type = \"sine\";\r\n            gainNode.gain.value *= 1.5;\r\n            break;\r\n        }\r\n        // Square\r\n        case 2000:\r\n        case  4: case 12: case 13: case 16: case 19: case 20: case 32: case 34: case 45: case 48: case 49:\r\n        case 55: case 56: case 57: case 61: case 62: case 63: case 71: case 72: case 73: case 74: case 75:\r\n        case 76: case 77: case 78: case 79: case 80: case 84:\r\n        {\r\n            oscillator.type = \"square\";\r\n            gainNode.gain.value *= 0.8;\r\n            break;\r\n        }\r\n        // Sawtooth\r\n        case 3000:\r\n        case  0: case  1: case  2: case  3: case  7: case 17: case 18: case 21: case 22: case 23: case 27:\r\n        case 28: case 29: case 30: case 36: case 37: case 38: case 39: case 40: case 41: case 42: case 43:\r\n        case 44: case 47: case 59: case 64: case 65: case 66: case 67: case 68: case 69: case 70: case 87:\r\n        {\r\n            oscillator.type = \"sawtooth\";\r\n            break;\r\n        }\r\n        // Triangle\r\n        case 4000:\r\n        case  8: case  9: case 10: case 11: case 14: case 25: case 31: case 33: case 35: case 58: case 60:\r\n        case 83: case 88: case 89: case 90: case 91: case 92: case 93: case 94: case 95:\r\n        {\r\n            oscillator.type = \"triangle\";\r\n            gainNode.gain.value *= 1.5;\r\n            break;\r\n        }\r\n        // Other - Square\r\n        default:{\r\n            oscillator.type = \"square\";\r\n        }\r\n    }\r\n\r\n    // 音の終わりのプチプチノイズが気になるので、音の終わりに5ms減衰してノイズ軽減 //\r\n    if ((oscillator.type == \"sine\" || oscillator.type == \"triangle\")\r\n        && !isPizzicato && note.stop - note.start > 0.01) {\r\n        isNoiseCut = true;\r\n    }\r\n\r\n    // 減衰の設定 //\r\n    switch (this.channels[note.channel][1]/10 || option.instrument) {\r\n        // ピッチカート系減衰\r\n        case 0.2:\r\n        case 12: case 13: case 45: case 55:\r\n        {\r\n            isPizzicato = true;\r\n            gainNode.gain.value *= 1.1;\r\n            gainNode.gain.setValueAtTime(gainNode.gain.value, note.start);\r\n            gainNode.gain.linearRampToValueAtTime(0.0, note.start+0.2);\r\n            this.stopAudioNode(oscillator, note.start+0.2, stopGainNode);\r\n            break;\r\n        }\r\n        // ピアノ程度に伸ばす系\r\n        case 0.3:\r\n        case  0: case  1: case  2: case  3: case  6: case  9: case 11: case 14: case 15:\r\n        case 32: case 36: case 37: case 46: case 47:\r\n        {\r\n            gainNode.gain.value *= 1.1;\r\n            const decay = (128-option.pitch)/128;\r\n            gainNode.gain.setValueAtTime(gainNode.gain.value, note.start);\r\n            gainNode.gain.linearRampToValueAtTime(gainNode.gain.value*0.85, note.start+decay*decay/8);\r\n            gainNode.gain.linearRampToValueAtTime(gainNode.gain.value*0.8, note.start+decay*decay/4);\r\n            gainNode.gain.setTargetAtTime(0, note.start+decay*decay/4, 5*decay*decay);\r\n            this.stopAudioNode(oscillator, note.stop, stopGainNode, isNoiseCut);\r\n            break;\r\n        }\r\n        // ギター系\r\n        case 0.4:\r\n        case 24: case 25: case 26: case 27: case 28: case 29: case 30: case 31: case 34:\r\n        {\r\n            gainNode.gain.value *= 1.1;\r\n            gainNode.gain.setValueAtTime(gainNode.gain.value, note.start);\r\n            gainNode.gain.linearRampToValueAtTime(0.0, note.start+1.0+note.velocity*4);\r\n            this.stopAudioNode(oscillator, note.stop, stopGainNode, isNoiseCut);\r\n            break;\r\n        }\r\n        // 減衰していくけど終わらない系\r\n        case 0.5:\r\n        case 4: case 5: case 7: case 8: case 10: case 33: case 35:\r\n        {\r\n            gainNode.gain.value *= 1.0;\r\n            gainNode.gain.setValueAtTime(gainNode.gain.value, note.start);\r\n            gainNode.gain.linearRampToValueAtTime(gainNode.gain.value*0.95, note.start+0.1);\r\n            gainNode.gain.setValueAtTime(gainNode.gain.value*0.95, note.start+0.1);\r\n            gainNode.gain.linearRampToValueAtTime(0.0, note.start+2.0+note.velocity*10);\r\n            this.stopAudioNode(oscillator, note.stop, stopGainNode, isNoiseCut);\r\n            break;\r\n        }\r\n        case 119: // Reverse Cymbal\r\n        {\r\n            gainNode.gain.value = 0;\r\n            this.stopAudioNode(oscillator, note.stop, stopGainNode, isNoiseCut);\r\n            note2 = this.createBaseNote(option, true, true);\r\n            if (note2.isGainValueZero) break;\r\n            note2.oscillator.playbackRate.setValueAtTime((option.pitch+1)/128, note.start);\r\n            note2.gainNode.gain.setValueAtTime(0, note.start);\r\n            note2.gainNode.gain.linearRampToValueAtTime(1.3, note.start+2);\r\n            this.stopAudioNode(note2.oscillator, note.stop, note2.stopGainNode);\r\n            break;\r\n        }\r\n        default: {\r\n            gainNode.gain.value *= 1.1;\r\n            gainNode.gain.setValueAtTime(gainNode.gain.value, note.start);\r\n            this.stopAudioNode(oscillator, note.stop, stopGainNode, isNoiseCut);\r\n        }\r\n    }\r\n\r\n    // 音をストップさせる関数を返す //\r\n    return () => {\r\n        this.stopAudioNode(oscillator, 0, stopGainNode, true);\r\n        if (note2 && note2.oscillator) this.stopAudioNode(note2.oscillator, 0, note2.stopGainNode, true);\r\n    };\r\n}","export default function createPercussionNote(option) {\r\n    const note = this.createBaseNote(option, true, false);\r\n    if (note.isGainValueZero) return null;\r\n\r\n    const source = note.oscillator;\r\n    const gainNode = note.gainNode;\r\n    const stopGainNode = note.stopGainNode;\r\n    let start = note.start;\r\n    const velocity = 1; // ドラム全体の音量調整用\r\n    const note2 = this.createBaseNote(option, false, false, true);\r\n    const oscillator = note2.oscillator;\r\n    const gainNode2 = note2.gainNode;\r\n    const stopGainNode2 = note2.stopGainNode;\r\n    const nextSameNoteOnInterval = option.nextSameNoteOnInterval;\r\n\r\n    // oscillator.frequency.setValueAtTime()がcurrentTimeより遅れると周波数設定がされないので対策\r\n    if (start < this.context.currentTime) start = this.context.currentTime;\r\n    let stopAudioTime = 0;\r\n    let stopAudioTime2 = 0;\r\n    switch (option.pitch) {\r\n        // 元々のパーカッション音源 //\r\n        // Bass drum\r\n        case 35:\r\n        case 36:\r\n            // w\r\n            gainNode.gain.value = velocity*0.6;\r\n            source.playbackRate.value = 0.02;\r\n            stopAudioTime = 0.07;\r\n            // s\r\n            gainNode2.gain.value = velocity*1.1;\r\n            oscillator.frequency.setValueAtTime(120, start);\r\n            oscillator.frequency.linearRampToValueAtTime(50, start+0.07);\r\n            stopAudioTime2 = 0.07;\r\n            break;\r\n        // Snare\r\n        case 38:\r\n        case 40:\r\n            // w\r\n            source.playbackRate.value = 0.7;\r\n            stopAudioTime = 0.05;\r\n            // s\r\n            gainNode2.gain.setValueAtTime(velocity*0.8, start);\r\n            gainNode2.gain.linearRampToValueAtTime(0.0, start+0.05);\r\n            oscillator.frequency.setValueAtTime(300, start);\r\n            oscillator.frequency.linearRampToValueAtTime(200, start+0.05);\r\n            stopAudioTime2 = 0.05;\r\n            break;\r\n        // Toms\r\n        case 41: case 43: case 45:\r\n        case 47: case 48: case 50:\r\n            // w\r\n            source.playbackRate.value = 0.01;\r\n            stopAudioTime = 0.1;\r\n            // s\r\n            oscillator.type = \"square\";\r\n            gainNode2.gain.setValueAtTime(velocity, start);\r\n            gainNode2.gain.linearRampToValueAtTime(0.01, start+0.1);\r\n            oscillator.frequency.setValueAtTime(150+20*(option.pitch-40), start);\r\n            oscillator.frequency.linearRampToValueAtTime(50+20*(option.pitch-40), start+0.1);\r\n            stopAudioTime2 = 0.1;\r\n            break;\r\n        // Close Hihat\r\n        case 42:\r\n        case 44:\r\n            source.playbackRate.value = 1.5;\r\n            stopAudioTime = 0.02;\r\n            stopAudioTime2 = 0;\r\n            break;\r\n        // Open Hihat\r\n        case 46:\r\n            source.playbackRate.value = 1.5;\r\n            stopAudioTime = 0.3;\r\n            gainNode.gain.setValueAtTime(velocity*0.9, start);\r\n            gainNode.gain.linearRampToValueAtTime(0.0, start+0.3);\r\n            stopAudioTime2 = 0;\r\n            break;\r\n        // Cymbal\r\n        case 49: case 52:\r\n        case 53: case 55: case 57:\r\n            source.playbackRate.value = 1.2;\r\n            stopAudioTime = 0.5;\r\n            gainNode.gain.setValueAtTime(velocity*1, start);\r\n            gainNode.gain.linearRampToValueAtTime(0.0, start+0.5);\r\n            stopAudioTime2 = 0;\r\n            break;\r\n        // Cymbal2\r\n        case 51:\r\n            source.playbackRate.value = 1.1;\r\n            stopAudioTime = 0.4;\r\n            gainNode.gain.setValueAtTime(velocity*0.8, start);\r\n            gainNode.gain.linearRampToValueAtTime(0.0, start+0.4);\r\n            stopAudioTime2 = 0;\r\n            break;\r\n        // Cymbal3\r\n        case 59:\r\n            source.playbackRate.value = 1.8;\r\n            stopAudioTime = 0.3;\r\n            gainNode.gain.setValueAtTime(velocity*0.5, start);\r\n            gainNode.gain.linearRampToValueAtTime(0.0, start+0.3);\r\n            stopAudioTime2 = 0;\r\n            break;\r\n        // Bongo\r\n        case 60: case 61:\r\n            // w\r\n            source.playbackRate.value = 0.03;\r\n            stopAudioTime = 0.03;\r\n            // s\r\n            gainNode2.gain.setValueAtTime(velocity*0.8, start);\r\n            gainNode2.gain.linearRampToValueAtTime(0.0, start+0.1);\r\n            oscillator.frequency.setValueAtTime(400-40*(option.pitch-60), start);\r\n            oscillator.frequency.linearRampToValueAtTime(450-40*(option.pitch-60), start+0.1);\r\n            stopAudioTime2 = 0.1;\r\n            break;\r\n        // mute Conga\r\n        case 62:\r\n            // w\r\n            source.playbackRate.value = 0.03;\r\n            stopAudioTime = 0.03;\r\n            // s\r\n            gainNode2.gain.setValueAtTime(velocity, start);\r\n            gainNode2.gain.linearRampToValueAtTime(0.0, start+0.03);\r\n            oscillator.frequency.setValueAtTime(200, start);\r\n            oscillator.frequency.linearRampToValueAtTime(250, start+0.03);\r\n            stopAudioTime2 = 0.03;\r\n            break;\r\n        // open Conga\r\n        case 63: case 64:\r\n            // w\r\n            source.playbackRate.value = 0.03;\r\n            stopAudioTime = 0.03;\r\n            // s\r\n            gainNode2.gain.setValueAtTime(velocity, start);\r\n            gainNode2.gain.linearRampToValueAtTime(0.0, start+0.1);\r\n            oscillator.frequency.setValueAtTime(200-30*(option.pitch-63), start);\r\n            oscillator.frequency.linearRampToValueAtTime(250-30*(option.pitch-63), start+0.1);\r\n            stopAudioTime2 = 0.1;\r\n            break;\r\n        // Cowbell, Claves\r\n        case 56:\r\n        case 75:\r\n            // w\r\n            source.playbackRate.value = 0.01;\r\n            stopAudioTime = 0.1;\r\n            // s\r\n            gainNode2.gain.setValueAtTime(velocity, start);\r\n            gainNode2.gain.linearRampToValueAtTime(0.0, start+0.1);\r\n            oscillator.frequency.setValueAtTime(1000+48*(option.pitch-56), start);\r\n            stopAudioTime2 = 0.1;\r\n            break;\r\n        // mute triangle\r\n        case 80:\r\n            // w\r\n            source.playbackRate.value = 5;\r\n            gainNode.gain.setValueAtTime(velocity*0.5, start);\r\n            gainNode.gain.linearRampToValueAtTime(0.0, start+0.2);\r\n            stopAudioTime = 0.05;\r\n            // s\r\n            oscillator.type = \"triangle\";\r\n            gainNode2.gain.setValueAtTime(velocity*0.7, start);\r\n            gainNode2.gain.linearRampToValueAtTime(0.0, start+0.2);\r\n            oscillator.frequency.setValueAtTime(6000, start);\r\n            stopAudioTime2 = 0.05;\r\n            break;\r\n        // open triangle\r\n        case 81:\r\n            // w\r\n            source.playbackRate.value = 5;\r\n            gainNode.gain.setValueAtTime(velocity*0.9, start);\r\n            gainNode.gain.linearRampToValueAtTime(0.0, start+0.5);\r\n            stopAudioTime = 0.5;\r\n            // s\r\n            oscillator.type = \"triangle\";\r\n            gainNode2.gain.setValueAtTime(velocity*0.8, start);\r\n            gainNode2.gain.linearRampToValueAtTime(0.0, start+0.3);\r\n            oscillator.frequency.setValueAtTime(6000, start);\r\n            stopAudioTime2 = 0.3;\r\n            break;\r\n\r\n\r\n\r\n        // 新しいパーカッション音源 //\r\n\r\n        // Snare Drum\r\n        case 37: // Side Stick\r\n        {\r\n            // w\r\n            source.playbackRate.value = 0.26;\r\n            gainNode.gain.setValueAtTime(velocity*1.5, start);\r\n            gainNode.gain.linearRampToValueAtTime(0, start+0.041);\r\n            stopAudioTime = 0.041;\r\n            // s\r\n            oscillator.frequency.setValueAtTime(330, start);\r\n            oscillator.frequency.linearRampToValueAtTime(120, start+0.02);\r\n            gainNode2.gain.setValueAtTime(velocity, start);\r\n            gainNode2.gain.linearRampToValueAtTime(0, start+0.02);\r\n            stopAudioTime2 = 0.02;\r\n            break;\r\n        }\r\n        case 39: // Hand Clap\r\n        {\r\n            // w\r\n            source.playbackRate.value = 0.5;\r\n            gainNode.gain.setValueAtTime(velocity*1.3, start);\r\n            gainNode.gain.linearRampToValueAtTime(0, start+0.010);\r\n            gainNode.gain.setValueAtTime(velocity*1.3, start+0.0101);\r\n            gainNode.gain.linearRampToValueAtTime(0, start+0.020);\r\n            gainNode.gain.setValueAtTime(velocity*1.3, start+0.0201);\r\n            gainNode.gain.linearRampToValueAtTime(0, start+0.09);\r\n            stopAudioTime = 0.09;\r\n            // s\r\n            oscillator.type = \"triangle\";\r\n            oscillator.frequency.setValueAtTime(180, start);\r\n            gainNode2.gain.setValueAtTime(velocity*0.8, start);\r\n            gainNode2.gain.linearRampToValueAtTime(0, start+0.010);\r\n            gainNode2.gain.setValueAtTime(velocity*0.8, start+0.0101);\r\n            gainNode2.gain.linearRampToValueAtTime(0, start+0.020);\r\n            gainNode2.gain.setValueAtTime(velocity*0.8, start+0.0201);\r\n            gainNode2.gain.linearRampToValueAtTime(0, start+0.030);\r\n            stopAudioTime2 = 0.11;\r\n            break;\r\n        }\r\n        // Bell\r\n        case 54: // Tambourine\r\n        {\r\n            // w\r\n            source.playbackRate.setValueAtTime(1, start);\r\n            let v = option.pitch==54 ? 1 : 0.4;\r\n            const len = option.pitch==54 ? 0.01 : 0;\r\n            gainNode.gain.setValueAtTime(velocity*v/2, start);\r\n            gainNode.gain.linearRampToValueAtTime(velocity*v, start+len);\r\n            gainNode.gain.setTargetAtTime(0, start+len, 0.05);\r\n            stopAudioTime = 0.3;\r\n            // s\r\n            oscillator.frequency.setValueAtTime(option.pitch==54 ? 6000 : 495, start);\r\n            v = option.pitch==54 ? 1 : 2;\r\n            gainNode2.gain.setValueAtTime(velocity*v/2, start);\r\n            gainNode2.gain.linearRampToValueAtTime(velocity*v, start+len);\r\n            gainNode2.gain.setTargetAtTime(0, start+len, 0.05);\r\n            stopAudioTime2 = 0.3;\r\n            break;\r\n        }\r\n        case 58: // Vibraslap\r\n        {\r\n            // w s\r\n            source.playbackRate.setValueAtTime(0.6, start);\r\n            source.playbackRate.linearRampToValueAtTime(1, start+0.8);\r\n            const len = 40;\r\n            gainNode.gain.setValueAtTime(velocity*1.5, start);\r\n            gainNode2.gain.setValueAtTime(velocity*0.5, start);\r\n            for (let i=0; i<len; i++) {\r\n                gainNode.gain.linearRampToValueAtTime(velocity*0.1*(len-i)/len, start+i/len*0.8);\r\n                gainNode.gain.linearRampToValueAtTime(velocity*1.5*(len-(i+1))/len, start+(i+0.99)/len*0.8);\r\n                gainNode2.gain.linearRampToValueAtTime(velocity*0.025*(len-i)/len, start+i/len*0.8);\r\n                gainNode2.gain.linearRampToValueAtTime(velocity*0.25*(len-(i+1))/len, start+(i+0.99)/len*0.8);\r\n            }\r\n            gainNode.gain.linearRampToValueAtTime(0, start+0.8);\r\n            gainNode2.gain.linearRampToValueAtTime(0, start+0.8);\r\n            stopAudioTime = 0.8;\r\n            // s\r\n            oscillator.type = \"triangle\";\r\n            oscillator.frequency.setValueAtTime(1000, start);\r\n            stopAudioTime2 = 0.8;\r\n            break;\r\n        }\r\n        case 65: // High Timbale\r\n        case 66: // Low Timbale\r\n        {\r\n            const len = option.pitch==65 ? 0.22 : 0.25;\r\n            // w\r\n            source.playbackRate.setValueAtTime(option.pitch==65 ? 0.25 : 0.22, start);\r\n            source.playbackRate.linearRampToValueAtTime(option.pitch==65 ? 0.2 : 0.18, start+len);\r\n            gainNode.gain.setValueAtTime(velocity*1.3, start);\r\n            gainNode.gain.linearRampToValueAtTime(velocity*0.2, start+len/3.5);\r\n            gainNode.gain.linearRampToValueAtTime(0, start+len);\r\n            stopAudioTime = len;\r\n            // s\r\n            oscillator.type = \"triangle\";\r\n            oscillator.frequency.setValueAtTime(option.pitch==65 ? 190*1.07 : 136*1.07, start);\r\n            oscillator.frequency.linearRampToValueAtTime(option.pitch==65 ? 190 : 136, start+0.1);\r\n            gainNode2.gain.setValueAtTime(velocity*3.2, start);\r\n            gainNode2.gain.setTargetAtTime(0, start, 0.08);\r\n            stopAudioTime2 = 1;\r\n            break;\r\n        }\r\n        case 67: // High Agogo\r\n        case 68: // Low Agogo\r\n        {\r\n            // w\r\n            source.playbackRate.value = 1;\r\n            gainNode.gain.setValueAtTime(velocity*0.5, start);\r\n            gainNode.gain.linearRampToValueAtTime(velocity*0.1, start+0.02);\r\n            gainNode.gain.linearRampToValueAtTime(0, start+0.08);\r\n            stopAudioTime = 0.08;\r\n            // s\r\n            oscillator.type = \"triangle\";\r\n            oscillator.frequency.setValueAtTime(option.pitch==67 ? 1430 : 1055, start);\r\n            gainNode2.gain.setValueAtTime(velocity*2, start);\r\n            gainNode2.gain.setTargetAtTime(0, start, 0.06);\r\n            stopAudioTime2 = 0.75;\r\n            break;\r\n        }\r\n        case 69: // Cabasa\r\n        {\r\n            // w\r\n            source.playbackRate.value = 1;\r\n            gainNode.gain.setValueAtTime(velocity*0.3, start);\r\n            gainNode.gain.linearRampToValueAtTime(velocity*0.8, start+0.03);\r\n            gainNode.gain.linearRampToValueAtTime(0, start+0.08);\r\n            stopAudioTime = 0.08;\r\n            // s\r\n            gainNode2.gain.value = 0;\r\n            stopAudioTime2 = 0;\r\n            break;\r\n        }\r\n        case 70: // Maracas\r\n        {\r\n            // w\r\n            source.playbackRate.value = 1;\r\n            gainNode.gain.setValueAtTime(velocity*1.2, start);\r\n            gainNode.gain.linearRampToValueAtTime(0, start+0.06);\r\n            stopAudioTime = 0.06;\r\n            // s\r\n            gainNode2.gain.value = 0;\r\n            stopAudioTime2 = 0;\r\n            break;\r\n        }\r\n        case 71: // Short Whistle\r\n        case 72: // Long Whistle\r\n        {\r\n            // w\r\n            gainNode.gain.value = 0;\r\n            stopAudioTime = 0;\r\n            // s\r\n            const len = option.pitch==71 ? 0.07 : 0.4;\r\n            oscillator.type = \"triangle\";\r\n            oscillator.frequency.setValueAtTime(option.pitch==71 ? 2408 : 2105, start);\r\n            gainNode2.gain.setValueAtTime(0, start);\r\n            for (let i=0; i<len*74; i++) {\r\n                gainNode2.gain.linearRampToValueAtTime(velocity*2.5, start+(i+0.2)/75);\r\n                gainNode2.gain.linearRampToValueAtTime(velocity*0.5, start+(i+0.9)/75);\r\n            }\r\n            gainNode2.gain.linearRampToValueAtTime(0, start+len);\r\n            stopAudioTime2 = len;\r\n            break;\r\n        }\r\n        case 73: // Short Guiro\r\n        case 74: // Long Guiro\r\n        {\r\n            // w\r\n            const len = option.pitch==73 ? 0.05 : 0.35;\r\n            source.playbackRate.setValueAtTime(option.pitch==73 ? 0.2 : 0.2, start);\r\n            source.playbackRate.linearRampToValueAtTime(option.pitch==73 ? 0.7 : 0.5, start+len);\r\n            gainNode.gain.value = velocity*0.2;\r\n            for (let i=0; i<len*100; i++) {\r\n                gainNode.gain.setValueAtTime(velocity*0.4, start+i/100);\r\n                gainNode.gain.setValueAtTime(velocity*0.9, start+(i+0.7)/100);\r\n            }\r\n            stopAudioTime = len;\r\n            // s\r\n            gainNode2.gain.value = 0;\r\n            stopAudioTime2 = 0;\r\n            break;\r\n        }\r\n        case 76: // High Wood Block\r\n        case 77: // Low Wood Block\r\n        {\r\n            // w\r\n            source.playbackRate.value = 0.1;\r\n            gainNode.gain.setValueAtTime(velocity*1.2, start);\r\n            gainNode.gain.linearRampToValueAtTime(0, start+0.015);\r\n            stopAudioTime = 0.015;\r\n            // s\r\n            oscillator.frequency.setValueAtTime(option.pitch==76 ? 800 : 600, start);\r\n            gainNode2.gain.setValueAtTime(0, start);\r\n            gainNode2.gain.linearRampToValueAtTime(velocity*3, start+0.005);\r\n            gainNode2.gain.setTargetAtTime(0, start+0.005, 0.02);\r\n            stopAudioTime2 = 0.2;\r\n            break;\r\n        }\r\n        case 78: // Close Cuica\r\n        case 79: // Open Cuica\r\n        {\r\n            // w\r\n            gainNode.gain.value = 0;\r\n            stopAudioTime = 0;\r\n            // s\r\n            const len = 0.18;\r\n            const f = option.pitch==78 ? 750 : 270;\r\n            oscillator.frequency.setValueAtTime(f, start);\r\n            oscillator.frequency.linearRampToValueAtTime(f, start+len/3);\r\n            if (option.pitch==78) oscillator.frequency.linearRampToValueAtTime(f*0.9, start+len);\r\n            gainNode2.gain.setValueAtTime(0, start);\r\n            gainNode2.gain.linearRampToValueAtTime(velocity*1.5, start+0.005);\r\n            gainNode2.gain.linearRampToValueAtTime(velocity*0.5, start+0.02);\r\n            gainNode2.gain.linearRampToValueAtTime(velocity*3, start+0.04);\r\n            gainNode2.gain.linearRampToValueAtTime(velocity*2, start+len/4*3);\r\n            gainNode2.gain.linearRampToValueAtTime(0, start+len);\r\n            stopAudioTime2 = len;\r\n            break;\r\n        }\r\n        // GS, GM2\r\n        case 27: // High Q\r\n        {\r\n            // w\r\n            source.playbackRate.value = 1;\r\n            gainNode.gain.setValueAtTime(velocity*1, start);\r\n            gainNode.gain.linearRampToValueAtTime(0, start+0.002);\r\n            stopAudioTime = 0.002;\r\n            // s\r\n            oscillator.frequency.setValueAtTime(1500, start);\r\n            oscillator.frequency.linearRampToValueAtTime(280, start+0.015);\r\n            oscillator.frequency.linearRampToValueAtTime(0, start+0.07);\r\n            gainNode2.gain.setValueAtTime(velocity*1.9, start);\r\n            gainNode2.gain.linearRampToValueAtTime(0, start+0.07);\r\n            stopAudioTime2 = 0.07;\r\n            break;\r\n        }\r\n        case 28: // Slap\r\n        {\r\n            // w\r\n            source.playbackRate.value = 1;\r\n            gainNode.gain.setValueAtTime(velocity*1.3, start);\r\n            gainNode.gain.linearRampToValueAtTime(0, start+0.010);\r\n            gainNode.gain.setValueAtTime(velocity*1.1, start+0.0101);\r\n            gainNode.gain.linearRampToValueAtTime(0, start+0.020);\r\n            gainNode.gain.setValueAtTime(velocity*0.9, start+0.0201);\r\n            gainNode.gain.setTargetAtTime(0, start+0.0201, 0.03);\r\n            stopAudioTime = 0.2;\r\n            // s\r\n            gainNode2.gain.value = 0;\r\n            stopAudioTime2 = 0;\r\n            break;\r\n        }\r\n        case 29: // Scratch Push\r\n        case 30: // Scratch Pull\r\n        {\r\n            const t1 = option.pitch==29 ? 0.05 : 0.07;\r\n            const t2 = option.pitch==29 ? 0.06 : 0.09;\r\n            const t3 = option.pitch==29 ? 0.07 : 0.11;\r\n            const t4 = option.pitch==29 ? 0.1 : 0.15;\r\n            const t5 = option.pitch==29 ? 0.25 : 0.4;\r\n            // w\r\n            const r1 = option.pitch==29 ? 0.1 : 0.06;\r\n            const r2 = option.pitch==29 ? 0.3 : 0.2;\r\n            const r3 = option.pitch==29 ? 0.18 : 0.12;\r\n            source.playbackRate.setValueAtTime(r1, start);\r\n            source.playbackRate.linearRampToValueAtTime(r2, start+t1);\r\n            source.playbackRate.linearRampToValueAtTime(0, start+t2);\r\n            source.playbackRate.linearRampToValueAtTime(r2, start+t3);\r\n            source.playbackRate.linearRampToValueAtTime(r3, start+t4);\r\n            source.playbackRate.linearRampToValueAtTime(0, start+t5);\r\n            gainNode.gain.setValueAtTime(0, start);\r\n            gainNode.gain.linearRampToValueAtTime(velocity*0.4, start+t1);\r\n            gainNode.gain.linearRampToValueAtTime(velocity*0.1, start+t3);\r\n            gainNode.gain.linearRampToValueAtTime(velocity*0.3, start+t4);\r\n            gainNode.gain.linearRampToValueAtTime(0, start+t5);\r\n            stopAudioTime = t5;\r\n            // s\r\n            const r4 = option.pitch==29 ? 500 : 400;\r\n            const r5 = option.pitch==29 ? 1950 : 1200;\r\n            const r6 = option.pitch==29 ? 430 : 250;\r\n            oscillator.frequency.setValueAtTime(r4, start);\r\n            oscillator.frequency.linearRampToValueAtTime(r5, start+t1);\r\n            oscillator.frequency.linearRampToValueAtTime(0, start+t2);\r\n            oscillator.frequency.linearRampToValueAtTime(r5, start+t3);\r\n            oscillator.frequency.linearRampToValueAtTime(r6, start+t4);\r\n            oscillator.frequency.linearRampToValueAtTime(0, start+t5);\r\n            gainNode2.gain.setValueAtTime(0, start);\r\n            gainNode2.gain.linearRampToValueAtTime(velocity*0.7, start+t1);\r\n            gainNode2.gain.linearRampToValueAtTime(velocity*0.2, start+t3);\r\n            gainNode2.gain.linearRampToValueAtTime(velocity*0.6, start+t4);\r\n            gainNode2.gain.linearRampToValueAtTime(0, start+t5);\r\n            stopAudioTime2 = t5;\r\n            break;\r\n        }\r\n        case 31: // Sticks\r\n        {\r\n            // w\r\n            source.playbackRate.setValueAtTime(0.4, start);\r\n            source.playbackRate.linearRampToValueAtTime(0.5, start+0.015);\r\n            gainNode.gain.setValueAtTime(velocity*1.2, start);\r\n            gainNode.gain.setTargetAtTime(0, start, 0.035);\r\n            stopAudioTime = 0.3;\r\n            // s\r\n            oscillator.frequency.setValueAtTime(3140, start);\r\n            gainNode2.gain.setValueAtTime(velocity*1.2, start);\r\n            gainNode2.gain.setTargetAtTime(0, start, 0.012);\r\n            stopAudioTime2 = 0.3;\r\n            break;\r\n        }\r\n        case 32: // Square Click\r\n        {\r\n            // w\r\n            gainNode.gain.value = 0;\r\n            stopAudioTime = 0;\r\n            // s\r\n            oscillator.type = \"square\";\r\n            oscillator.frequency.setValueAtTime(333, start);\r\n            gainNode2.gain.setValueAtTime(0, start);\r\n            gainNode2.gain.linearRampToValueAtTime(velocity*4, start+0.0016);\r\n            gainNode2.gain.linearRampToValueAtTime(0, start+0.0032);\r\n            stopAudioTime2 = 0.0032;\r\n            break;\r\n        }\r\n        case 33: // Metronome Click\r\n        case 34: // Metronome Bell\r\n        {\r\n            // w\r\n            source.playbackRate.setValueAtTime(0.17, start);\r\n            source.playbackRate.linearRampToValueAtTime(0.22, start+0.01);\r\n            gainNode.gain.setValueAtTime(velocity*1.5, start);\r\n            gainNode.gain.setTargetAtTime(0, start, 0.015);\r\n            stopAudioTime = 0.3;\r\n            // s\r\n            if (option.pitch==34) {\r\n                oscillator.frequency.setValueAtTime(2040, start);\r\n                gainNode2.gain.setValueAtTime(velocity*1, start);\r\n                gainNode2.gain.setTargetAtTime(0, start, 0.12);\r\n                stopAudioTime2 = 1.1;\r\n            } else {\r\n                gainNode2.gain.value = 0;\r\n                stopAudioTime2 = 0;\r\n            }\r\n            break;\r\n        }\r\n        case 82: // Shaker\r\n        {\r\n            // w\r\n            source.playbackRate.value = 1;\r\n            gainNode.gain.setValueAtTime(velocity*0.5, start);\r\n            gainNode.gain.linearRampToValueAtTime(velocity, start+0.02);\r\n            gainNode.gain.linearRampToValueAtTime(0, start+0.07);\r\n            stopAudioTime = 0.07;\r\n            // s\r\n            gainNode2.gain.value = 0;\r\n            stopAudioTime2 = 0;\r\n            break;\r\n        }\r\n        case 83: // Jingle Bell\r\n        {\r\n            // w\r\n            source.playbackRate.value = 1;\r\n            gainNode.gain.setValueAtTime(0, start);\r\n            gainNode.gain.linearRampToValueAtTime(velocity*1.2, start+0.015);\r\n            gainNode.gain.setTargetAtTime(0, start+0.015, 0.06);\r\n            stopAudioTime = 0.5;\r\n            // s\r\n            oscillator.type = \"triangle\";\r\n            oscillator.frequency.setValueAtTime(2709, start);\r\n            oscillator.frequency.linearRampToValueAtTime(2657, start+0.3);\r\n            gainNode2.gain.setValueAtTime(0, start);\r\n            gainNode2.gain.linearRampToValueAtTime(velocity*0.7, start+0.025);\r\n            gainNode2.gain.setTargetAtTime(0, start+0.025, 0.07);\r\n            stopAudioTime2 = 0.5;\r\n            break;\r\n        }\r\n        case 84: // Bell Tree\r\n        {\r\n            // w s\r\n            const invert = false;\r\n            source.playbackRate.value = 1;\r\n            for (let i=0; i<28; i++) {\r\n                gainNode.gain.setValueAtTime(velocity*0.1, start+i/24*0.45);\r\n                gainNode.gain.setTargetAtTime(0, start+i/24*0.45, 0.01);\r\n                oscillator.frequency.setValueAtTime(1380*(1+(invert ? (24-i)/24 : i/24)), start+i/24*0.45);\r\n                gainNode2.gain.setValueAtTime(velocity*(0.2+i/24), start+i/24*0.45);\r\n                gainNode2.gain.setTargetAtTime(0, start+i/24*0.45, i==27 ? 0.2 : 0.01);\r\n            }\r\n            stopAudioTime = 0.5;\r\n            stopAudioTime2 = 1.5;\r\n            break;\r\n        }\r\n        case 85: // Castanets\r\n        {\r\n            // w\r\n            source.playbackRate.setValueAtTime(0.35, start);\r\n            gainNode.gain.setValueAtTime(velocity*1.3, start);\r\n            gainNode.gain.setTargetAtTime(0, start, 0.01);\r\n            stopAudioTime = 0.1;\r\n            // s\r\n            oscillator.frequency.setValueAtTime(1730, start);\r\n            gainNode2.gain.setValueAtTime(velocity*0.5, start);\r\n            gainNode2.gain.setTargetAtTime(0, start, 0.01);\r\n            stopAudioTime2 = 0.1;\r\n            break;\r\n        }\r\n        case 86: // Mute Surdo\r\n        case 87: // Open Surdo\r\n        {\r\n            // w\r\n            source.playbackRate.setValueAtTime(0.020, start);\r\n            source.playbackRate.linearRampToValueAtTime(0.015, start+0.5);\r\n            gainNode.gain.setValueAtTime(0, start);\r\n            gainNode.gain.linearRampToValueAtTime(velocity*2, start+0.005);\r\n            gainNode.gain.setTargetAtTime(0, start+0.005, option.pitch==86 ? 0.03 : 0.06);\r\n            stopAudioTime = 0.5;\r\n            // s\r\n            oscillator.frequency.setValueAtTime(88, start);\r\n            oscillator.frequency.linearRampToValueAtTime(86, start+0.3);\r\n            gainNode2.gain.setValueAtTime(velocity*2.5, start);\r\n            gainNode2.gain.setTargetAtTime(0, start, option.pitch==86 ? 0.1 : 0.3);\r\n            stopAudioTime2 = option.pitch==86 ? 0.5 : 1.5;\r\n            break;\r\n        }\r\n\r\n\r\n\r\n        // 新しいパーカッション音源（不採用） //\r\n        //     旧音源と重複するソース //\r\n        //     ESLintエラーが出るため、旧音源と重複するソースをコメントアウト //\r\n\r\n        // // Bass Drum\r\n        // case 35: // Acoustic Bass Drum\r\n        // case 36: // Bass Drum\r\n        // {\r\n        //     // w\r\n        //     source.playbackRate.value = 0.25;\r\n        //     gainNode.gain.setValueAtTime(0, start);\r\n        //     gainNode.gain.linearRampToValueAtTime(velocity*0.7, start+0.004);\r\n        //     gainNode.gain.linearRampToValueAtTime(0, start+0.008);\r\n        //     stopAudioTime = 0.008;\r\n        //     // s\r\n        //     oscillator.frequency.setValueAtTime(option.pitch==35 ? 90 : 160, start);\r\n        //     oscillator.frequency.linearRampToValueAtTime(40, start+0.08);\r\n        //     gainNode2.gain.setValueAtTime(0, start);\r\n        //     gainNode2.gain.linearRampToValueAtTime(velocity*3, start+0.02);\r\n        //     gainNode2.gain.linearRampToValueAtTime(0, start+0.08);\r\n        //     stopAudioTime2 = 0.08;\r\n        //     break;\r\n        // }\r\n        // case 38: // Acoustic Snare\r\n        // case 40: // Electric Snare\r\n        // {\r\n        //     const len = option.pitch==38 ? 0.25 : 0.2;\r\n        //     // w\r\n        //     source.playbackRate.value = 0.7;\r\n        //     gainNode.gain.setValueAtTime(velocity, start);\r\n        //     gainNode.gain.linearRampToValueAtTime(0, start+len);\r\n        //     stopAudioTime = len;\r\n        //     // s\r\n        //     oscillator.frequency.setValueAtTime(option.pitch==38 ? 140 : 200, start);\r\n        //     oscillator.frequency.linearRampToValueAtTime(option.pitch==38 ? 100 : 160, start+0.1);\r\n        //     gainNode2.gain.setValueAtTime(velocity*2, start);\r\n        //     gainNode2.gain.linearRampToValueAtTime(0, start+0.1);\r\n        //     stopAudioTime2 = 0.1;\r\n        //     break;\r\n        // }\r\n        // // Toms\r\n        // case 41: // Low Floor Tom\r\n        // case 43: // High Floor Tom\r\n        // case 45: // Low Tom\r\n        // case 47: // Low-Mid Tom\r\n        // case 48: // High-Mid Tom\r\n        // case 50: // High Tom\r\n        // {\r\n        //     const len = option.pitch-41+(option.pitch>=48 ? 1 : 0);\r\n        //     // w\r\n        //     source.playbackRate.value = 0.3+len/45;\r\n        //     gainNode.gain.setValueAtTime(velocity*1.5, start);\r\n        //     gainNode.gain.linearRampToValueAtTime(0, start+0.02);\r\n        //     stopAudioTime = 0.02;\r\n        //     // s\r\n        //     oscillator.frequency.setValueAtTime(90+15*len, start);\r\n        //     oscillator.frequency.linearRampToValueAtTime(30+7.5*len, start+0.5-len/35);\r\n        //     gainNode2.gain.setValueAtTime(velocity*1.5, start);\r\n        //     gainNode2.gain.linearRampToValueAtTime(0, start+0.5-len/35);\r\n        //     stopAudioTime2 = 0.5-len/35;\r\n        //     break;\r\n        // }\r\n        // // Hi-hat\r\n        // case 42: // Closed High-Hat\r\n        // case 44: // Pedal High-Hat\r\n        // {\r\n        //     // w\r\n        //     source.playbackRate.value = 1;\r\n        //     if (option.pitch==42) {\r\n        //         gainNode.gain.setValueAtTime(velocity*0.8, start);\r\n        //     }else{\r\n        //         gainNode.gain.setValueAtTime(0, start);\r\n        //         gainNode.gain.linearRampToValueAtTime(velocity*0.8, start+0.014);\r\n        //     }\r\n        //     gainNode.gain.linearRampToValueAtTime(0, start+0.08);\r\n        //     stopAudioTime = 0.08;\r\n        //     // s\r\n        //     gainNode2.gain.value = 0;\r\n        //     stopAudioTime2 = 0;\r\n        //     break;\r\n        // }\r\n        // case 46: // Open Hihat\r\n        // {\r\n        //     // w\r\n        //     source.playbackRate.setValueAtTime(0.35, start);\r\n        //     source.playbackRate.linearRampToValueAtTime(0.6, start+0.1);\r\n        //     source.playbackRate.linearRampToValueAtTime(1, start+0.3);\r\n        //     gainNode.gain.setValueAtTime(velocity*1.1, start);\r\n        //     gainNode.gain.setTargetAtTime(0, start, 0.3);\r\n        //     stopAudioTime = 1.5;\r\n        //     // s\r\n        //     gainNode2.gain.value = 0;\r\n        //     stopAudioTime2 = 0;\r\n        //     break;\r\n        // }\r\n        // // Cymbal\r\n        // case 49: // Crash Cymbal 1\r\n        // case 57: // Crash Cymbal 2\r\n        // {\r\n        //     // w\r\n        //     const r = option.pitch==49 ? 0.3 : 0.5;\r\n        //     const r2 = option.pitch==49 ? 0.4 : 0.7;\r\n        //     source.playbackRate.setValueAtTime(r, start);\r\n        //     source.playbackRate.linearRampToValueAtTime(r2, start+0.15);\r\n        //     source.playbackRate.linearRampToValueAtTime(0.9, start+0.4);\r\n        //     gainNode.gain.setValueAtTime(velocity*1.3, start);\r\n        //     gainNode.gain.setTargetAtTime(0, start, 0.35);\r\n        //     stopAudioTime = 2;\r\n        //     // s\r\n        //     gainNode2.gain.value = 0;\r\n        //     stopAudioTime2 = 0;\r\n        //     break;\r\n        // }\r\n        // case 51: // Ride Cymbal 1\r\n        // case 59: // Ride Cymbal 2\r\n        // {\r\n        //     // w\r\n        //     source.playbackRate.value = 1;\r\n        //     gainNode.gain.setValueAtTime(velocity*0.9, start);\r\n        //     gainNode.gain.setTargetAtTime(0, start, 0.35);\r\n        //     stopAudioTime = 2;\r\n        //     // s\r\n        //     oscillator.type = \"triangle\";\r\n        //     const f = option.pitch==51 ? 372 : 400;\r\n        //     oscillator.frequency.setValueAtTime(f, start);\r\n        //     gainNode2.gain.setValueAtTime(velocity*0.4, start);\r\n        //     gainNode2.gain.setTargetAtTime(0, start, 0.35);\r\n        //     stopAudioTime2 = 2;\r\n        //     break;\r\n        // }\r\n        // case 52: // Chinese Cymbal\r\n        // {\r\n        //     // w\r\n        //     source.playbackRate.setValueAtTime(0.17, start);\r\n        //     source.playbackRate.linearRampToValueAtTime(0.25, start+0.1);\r\n        //     source.playbackRate.linearRampToValueAtTime(0.5, start+0.6);\r\n        //     gainNode.gain.setValueAtTime(velocity*1.3, start);\r\n        //     gainNode.gain.setTargetAtTime(0, start, 0.35);\r\n        //     stopAudioTime = 2;\r\n        //     // s\r\n        //     oscillator.type = \"triangle\";\r\n        //     oscillator.frequency.setValueAtTime(382, start);\r\n        //     gainNode2.gain.setValueAtTime(velocity*0.2, start);\r\n        //     gainNode2.gain.setTargetAtTime(0, start, 0.35);\r\n        //     stopAudioTime2 = 2;\r\n        //     break;\r\n        // }\r\n        // case 53: // Ride Bell\r\n        // {\r\n        //     // w\r\n        //     source.playbackRate.setValueAtTime(0.6, start);\r\n        //     gainNode.gain.setValueAtTime(velocity, start);\r\n        //     gainNode.gain.setTargetAtTime(0, start, 0.3);\r\n        //     stopAudioTime = 2;\r\n        //     // s\r\n        //     oscillator.type = \"triangle\";\r\n        //     oscillator.frequency.setValueAtTime(377, start);\r\n        //     gainNode2.gain.setValueAtTime(velocity*0.5, start);\r\n        //     gainNode2.gain.setTargetAtTime(0, start, 0.35);\r\n        //     stopAudioTime2 = 2;\r\n        //     break;\r\n        // }\r\n        // case 55: // Splash Cymbal\r\n        // {\r\n        //     // w\r\n        //     source.playbackRate.setValueAtTime(0.5, start);\r\n        //     source.playbackRate.linearRampToValueAtTime(0.8, start+0.1);\r\n        //     source.playbackRate.linearRampToValueAtTime(1, start+0.6);\r\n        //     gainNode.gain.setValueAtTime(velocity*1.5, start);\r\n        //     gainNode.gain.setTargetAtTime(0, start, 0.3);\r\n        //     stopAudioTime = 1.75;\r\n        //     // s\r\n        //     gainNode2.gain.value = 0;\r\n        //     stopAudioTime2 = 0;\r\n        //     break;\r\n        // }\r\n        // case 56: // Cowbell\r\n        // {\r\n        //     // w\r\n        //     source.playbackRate.setValueAtTime(1, start);\r\n        //     let v = option.pitch==54 ? 1 : 0.4;\r\n        //     const len = option.pitch==54 ? 0.01 : 0;\r\n        //     gainNode.gain.setValueAtTime(velocity*v/2, start);\r\n        //     gainNode.gain.linearRampToValueAtTime(velocity*v, start+len);\r\n        //     gainNode.gain.setTargetAtTime(0, start+len, 0.05);\r\n        //     stopAudioTime = 0.3;\r\n        //     // s\r\n        //     oscillator.frequency.setValueAtTime(option.pitch==54 ? 6000 : 495, start);\r\n        //     v = option.pitch==54 ? 1 : 2;\r\n        //     gainNode2.gain.setValueAtTime(velocity*v/2, start);\r\n        //     gainNode2.gain.linearRampToValueAtTime(velocity*v, start+len);\r\n        //     gainNode2.gain.setTargetAtTime(0, start+len, 0.05);\r\n        //     stopAudioTime2 = 0.3;\r\n        //     break;\r\n        // }\r\n        // case 80: // Mute Triangle\r\n        // {\r\n        //     // w\r\n        //     source.playbackRate.value = 1;\r\n        //     gainNode.gain.setValueAtTime(velocity*0.5, start);\r\n        //     gainNode.gain.setTargetAtTime(0, start, 0.015);\r\n        //     stopAudioTime = 0.2;\r\n        //     // s\r\n        //     oscillator.type = \"triangle\";\r\n        //     oscillator.frequency.setValueAtTime(6000, start);\r\n        //     gainNode2.gain.setValueAtTime(velocity*2.5, start);\r\n        //     gainNode2.gain.setTargetAtTime(0, start, 0.02);\r\n        //     stopAudioTime2 = 0.3;\r\n        //     break;\r\n        // }\r\n        // case 81: // Open Triangle\r\n        // {\r\n        //     // w\r\n        //     source.playbackRate.value = 5;\r\n        //     gainNode.gain.setValueAtTime(velocity*0.5, start);\r\n        //     gainNode.gain.setTargetAtTime(0, start, 0.08);\r\n        //     stopAudioTime = 0.75;\r\n        //     // s\r\n        //     oscillator.type = \"triangle\";\r\n        //     oscillator.frequency.setValueAtTime(6000, start);\r\n        //     gainNode2.gain.setValueAtTime(velocity*2.5, start);\r\n        //     gainNode2.gain.setTargetAtTime(0, start, 0.18);\r\n        //     stopAudioTime2 = 1;\r\n        //     break;\r\n        // }\r\n        // // Other Percussion\r\n        // case 60: // High Bongo\r\n        // case 61: // Low Bongo\r\n        // case 62: // Mute High Conga\r\n        // case 63: // Open High Conga\r\n        // case 64: // Low Conga\r\n        // {\r\n        //     const p = option.pitch;\r\n        //     const r = p==60 ? 700 : p==61 ? 282 : p==62 ? 385 : p==63 ? 295 : 210;\r\n        //     const len = p==60 ? 0.08 : p==61 ? 0.1 : p==62 ? 0.03 : p==63 ? 0.12 : 0.15;\r\n        //     // w\r\n        //     source.playbackRate.value = 0.03;\r\n        //     gainNode.gain.setValueAtTime(velocity*1.2, start);\r\n        //     stopAudioTime = 0.03;\r\n        //     // s\r\n        //     oscillator.frequency.setValueAtTime(r*0.97, start);\r\n        //     oscillator.frequency.linearRampToValueAtTime(r, start+len);\r\n        //     gainNode2.gain.setValueAtTime(velocity*1.8, start);\r\n        //     gainNode2.gain.linearRampToValueAtTime(0, start+len);\r\n        //     stopAudioTime2 = len;\r\n        //     break;\r\n        // }\r\n        // case 75: // Claves\r\n        // {\r\n        //     // w\r\n        //     gainNode.gain.value = 0;\r\n        //     stopAudioTime = 0;\r\n        //     // s\r\n        //     oscillator.frequency.setValueAtTime(2181, start);\r\n        //     gainNode2.gain.setValueAtTime(0, start);\r\n        //     gainNode2.gain.setValueAtTime(velocity*2, start+0.005);\r\n        //     gainNode2.gain.linearRampToValueAtTime(velocity*1, start+0.015);\r\n        //     gainNode2.gain.linearRampToValueAtTime(velocity*1.5, start+0.025);\r\n        //     gainNode2.gain.linearRampToValueAtTime(0, start+0.08);\r\n        //     stopAudioTime2 = 0.1;\r\n        //     break;\r\n        // }\r\n\r\n        default: {\r\n            source.playbackRate.value = option.pitch/69*2;\r\n            stopAudioTime = 0.05;\r\n            stopAudioTime2 = 0;\r\n            break;\r\n        }\r\n    }\r\n    // 同じドラムの音が重ならないようにする機能\r\n    // ドラム再生中に次の同じドラムがすぐ鳴る場合、次が鳴る前に止めて音が重ならないようにする（同時発音数の増加を軽減する）\r\n    if (!this.settings.isSameDrumSoundOverlap && nextSameNoteOnInterval != -1) {\r\n        if (stopAudioTime > nextSameNoteOnInterval) {\r\n            stopAudioTime = nextSameNoteOnInterval;\r\n        }\r\n        if (stopAudioTime2 > nextSameNoteOnInterval) {\r\n            stopAudioTime2 = nextSameNoteOnInterval;\r\n        }\r\n    }\r\n    // ドラム音停止時間を設定\r\n    this.stopAudioNode(source, start+stopAudioTime, stopGainNode);\r\n    this.stopAudioNode(oscillator, start+stopAudioTime2, stopGainNode2);\r\n    // ドラム停止時間を設定\r\n    option.drumStopTime = option.startTime + (stopAudioTime >= stopAudioTime2 ? stopAudioTime : stopAudioTime2);\r\n\r\n    // 音をストップさせる関数を返す //\r\n    return () => {\r\n        this.stopAudioNode(source, 0, stopGainNode, true);\r\n        this.stopAudioNode(oscillator, 0, stopGainNode2, true);\r\n    };\r\n}","export default function stopAudioNode(tar, time, stopGainNode, isNoiseCut) {\r\n    const isImmed = time <= this.context.currentTime; // 即時ストップか？\r\n\r\n    // 予約ストップ //\r\n    let vol1Time = time-0.005;\r\n    let stopTime = time;\r\n\r\n    // 時間設定 //\r\n    if (isImmed) { // 即時ストップ\r\n        if (!isNoiseCut) {\r\n            stopTime = this.context.currentTime;\r\n        } else {  // ノイズカット\r\n            vol1Time = this.context.currentTime;\r\n            stopTime = this.context.currentTime+0.005;\r\n        }\r\n    }\r\n\r\n    // 音の停止 //\r\n    try { // 通常の音停止処理\r\n        if (!isNoiseCut) {\r\n            tar.stop(stopTime);\r\n        } else { // ノイズカット（音の終わりに短いフェードアウトを入れる）\r\n            tar.stop(stopTime);\r\n            stopGainNode.gain.cancelScheduledValues(0);\r\n            stopGainNode.gain.setValueAtTime(1, vol1Time);\r\n            stopGainNode.gain.linearRampToValueAtTime(0, stopTime);\r\n        }\r\n    } catch(e) { // iOS用 (stopが２回以上使えないので、代わりにstopGainNodeでミュートにする)\r\n        stopGainNode.gain.cancelScheduledValues(0);\r\n        if (!isNoiseCut) {\r\n            stopGainNode.gain.setValueAtTime(0, stopTime);\r\n        } else { // ノイズカット（音の終わりに短いフェードアウトを入れる）\r\n            stopGainNode.gain.setValueAtTime(1, vol1Time);\r\n            stopGainNode.gain.linearRampToValueAtTime(0, stopTime);\r\n        }\r\n    }\r\n}","export default function pushFunc(tar) {\r\n    if (!tar.note\r\n        && !tar.rootTimeout\r\n        && !tar.pan\r\n        && !this.trigger.isNoteTrigger)\r\n    {\r\n        return;\r\n    }\r\n\r\n    this.states.stopFuncs.push(tar);\r\n}","import ArrayUtil from '../../util/array-util.js';\r\n\r\nexport default function clearFunc(tar1, tar2) {\r\n    if (tar1 != \"note\"\r\n        && tar1 != \"rootTimeout\"\r\n        && tar1 != \"pan\"\r\n        && !this.trigger.isNoteTrigger)\r\n    {\r\n        return;\r\n    }\r\n\r\n    this.states.stopFuncs.some((n, i, ary) => {\r\n        if (n[tar1] == tar2) {\r\n            ArrayUtil.delete(ary, i); // ary.splice(i, 1); を高速化\r\n            return true;\r\n        }\r\n    });\r\n}","/**\r\n * tickからtime(秒)を求める\r\n * @param {number} tick\r\n * @returns {number} time(秒)\r\n */\r\nexport default function getTime(tick) {\r\n    let imid = -1;\r\n\r\n    // tempo変更がある場合、tickを検索する //\r\n    if (this.tempoTrack && this.tempoTrack.length >= 1) {\r\n        // 最後のtickを超える場合、最後のtimeを返す //\r\n        if (tick >= this.tempoTrack[this.tempoTrack.length-1].timing) {\r\n            return this.tempoTrack[this.tempoTrack.length-1].time;\r\n        }\r\n        // 二分探索でtickを探す //\r\n        let imin = 0;\r\n        let imax = this.tempoTrack.length - 1;\r\n        while (true) {\r\n            imid = Math.floor(imin + (imax - imin) / 2);\r\n            const tempTiming = this.tempoTrack[imid].timing;\r\n            if (tick < tempTiming) {\r\n                imax = imid - 1;\r\n            } else if (tick > tempTiming) {\r\n                imin = imid + 1;\r\n            } else {\r\n                break;\r\n            }\r\n            if (imin > imax) {\r\n                if (tick < tempTiming) imid--;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    let time = 0;\r\n    let baseTiming = 0;\r\n    let tempo = 120;\r\n    if (imid >= 0) { // tickを探索して見つかった場合\r\n        // 引数tickに一番近いtickを取得\r\n        const tempoObj = this.tempoTrack[imid];\r\n        time = tempoObj.time;\r\n        baseTiming = tempoObj.timing;\r\n        tempo = tempoObj.value;\r\n    }\r\n\r\n    // tickからtimeを算出する\r\n    // 引数tickに一番近いtickのtime ＋ 引数tickから残りのtimeを算出 ＝ 現在のtime\r\n    time += (60 / tempo / this.settings.resolution) * (tick - baseTiming);\r\n    return time;\r\n}","/**\r\n * time(秒)からtickを求める\r\n * @param {number} time\r\n * @returns {number} tick\r\n */\r\nexport default function getTiming(time) {\r\n    let imid = -1;\r\n\r\n    // tempo変更がある場合、timeを検索する //\r\n    if (this.tempoTrack && this.tempoTrack.length >= 1) {\r\n        // 最後のtimeを超える場合、最後のtickを返す\r\n        if (time >= this.tempoTrack[this.tempoTrack.length-1].time) {\r\n            return this.tempoTrack[this.tempoTrack.length-1].timing;\r\n        }\r\n        // 二分探索でtimeを探す\r\n        let imin = 0;\r\n        let imax = this.tempoTrack.length - 1;\r\n        while (true) {\r\n            imid = Math.floor(imin + (imax - imin) / 2);\r\n            const tempTime = this.tempoTrack[imid].time;\r\n            if (time < tempTime) {\r\n                imax = imid - 1;\r\n            } else if (time > tempTime) {\r\n                imin = imid + 1;\r\n            } else {\r\n                break;\r\n            }\r\n            if (imin > imax) {\r\n                if (time < tempTime) imid--;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    let baseTime = 0;\r\n    let tick = 0;\r\n    let tempo = 120;\r\n    if (imid >= 0) { // timeを探索して見つかった場合\r\n        // 引数timeに一番近いtimeを取得\r\n        const tempoObj = this.tempoTrack[imid];\r\n        baseTime = tempoObj.time;\r\n        tick = tempoObj.timing;\r\n        tempo = tempoObj.value;\r\n    }\r\n\r\n    // timeからtickを算出する\r\n    // 引数timeに一番近いtimeのtick ＋ 現在timeから残りのtickを算出 ＝ 現在のtick\r\n    tick += (time - baseTime) / (60 / tempo / this.settings.resolution);\r\n    return tick;\r\n}","import ParseUtil from '../../util/parse-util.js';\r\n\r\nexport default function parseHeader(info) {\r\n    // 関数呼び出し元からデータをもらう //\r\n    const smf = info.smf;\r\n\r\n    // SMFのヘッダチャンクを解析 //\r\n    let p = 4; \r\n    const header = {};\r\n    header.size = ParseUtil.getInt(smf, 4, 8);\r\n    header.format = smf[9];\r\n    header.trackcount = ParseUtil.getInt(smf, 10, 12);\r\n    header.timemanage = smf[12];\r\n    header.resolution = ParseUtil.getInt(smf, 12, 14); // TODO 0除算防止。15bit目1のとき、https://sites.google.com/site/yyagisite/material/smfspec#ConductorTrack\r\n    p += 4 + header.size;\r\n\r\n    // 変数を用意 //\r\n    const channels = [];\r\n    const chSize = this.settings.isWebMIDI ? 17 : 16; // WebMIDI用に17chに全てのイベントを入れるため17ch分作る\r\n    for (let i=0; i<chSize; i++) {\r\n        const channel = {};\r\n        channels.push(channel);\r\n        // smfを読む順番を記録した索引配列を作る //\r\n        // 型付き配列をリスト構造の配列のように使う（リスト構造にすることで挿入処理を高速化する）\r\n        // [tick, smfMesLength, smfPtr, nextIndicesPtr, ...]\r\n        channel.indices = [];\r\n        channel.indicesLength = 0;\r\n        channel.indicesHead = -1; // 先頭のポインタ\r\n        channel.indicesFoot = 0; // 末尾のポインタ\r\n        channel.indicesCur = 0; // 現在のinsert用ポインタ\r\n        channel.indicesPre = 0; // 前回のinsert用ポインタ\r\n        channel.notes = [];\r\n    }\r\n\r\n    // 関数呼び出し元にデータを返す //\r\n    info.p = p;\r\n    info.header = header;\r\n    info.channels = channels;\r\n    return info;\r\n}","import ParseUtil from '../../util/parse-util.js';\r\n\r\nexport default function parseTrack(info) {\r\n    // 関数呼び出し元からデータをもらう //\r\n    const smf = info.smf;\r\n    let p = info.p;\r\n    const header = info.header;\r\n    const channels = info.channels;\r\n\r\n    // SMFのトラックチャンクの解析・\"SMF読み込み順序配列\"を作成 //\r\n    //   全トラックを解析しながら、SMFを読む順番を記録した配列を作成する\r\n    //   読み込む順番は、この解析でデルタタイム順になるようソートしておく\r\n    //   SMFのMIDIイベント解析時は、上記配列から「次はMIDIファイルの何バイト目を見るか」を取得して解析する\r\n    //   上記配列はリスト構造の配列のように使う（リスト構造にすることで配列のinsert処理を高速化する）\r\n    // \r\n    // ■配列イメージ（json風）■\r\n    // [\r\n    //     {\r\n    //         tick : このMIDIイベントのTick,\r\n    //         smfMesLength : １つのMIDIイベントの長さ,\r\n    //         smfPtr : このMIDIイベントはMIDIファイルの何バイト目にあるか,\r\n    //         nextIndicesPtr : 次のオブジェクトはリスト配列の何番目にあるか\r\n    //     },\r\n    //     ...\r\n    // ]\r\n    // \r\n    // ■実際の配列イメージ■\r\n    // [tick, smfMesLength, smfPtr, nextIndicesPtr, ...]\r\n\r\n    const tempoTrack = [];\r\n    const beatTrack = [];\r\n    let songLength = 0;\r\n    for (let t=0; t<header.trackcount; t++) {\r\n        // \"MTrk\"\r\n        if (smf[p] != 77 || smf[p+1] != 84 || smf[p+2] != 114 || smf[p+3] != 107)\r\n            return \"Irregular SMF.\";\r\n        p += 4;\r\n        const endPoint = p + 4 + ParseUtil.getInt(smf, p, p+4);\r\n        p += 4;\r\n        let tick = 0;\r\n        let tempo = 120;\r\n        let tempoCurTick = 0;\r\n        let tempoCurTime = 0;\r\n        let lastState = 1;\r\n        let dt;\r\n        while (p<endPoint) {\r\n            // DeltaTime\r\n            if (lastState != null) {\r\n                const lengthAry = ParseUtil.variableLengthToInt(smf, p, p+5);\r\n                dt = lengthAry[0];\r\n                tick += dt;\r\n                p += lengthAry[1];\r\n            }\r\n            const cashP = p; // WebMIDI用\r\n            // Events\r\n            const mes0 = smf[p] >> 4; // Math.floor(smf[p] / 0x10)\r\n            switch (mes0) {\r\n                case 0x8: // Note OFF - 8[ch], Pitch, Velocity\r\n                case 0x9: // Note ON - 9[ch], Pitch, Velocity\r\n                case 0xA: // Polyfonic Key Pressure - A[ch], Pitch?, Velocity?\r\n                case 0xB: // Control Change - B[ch],,\r\n                case 0xE: // PitchBend Change - E[ch],,\r\n                {\r\n                    // チャンネル毎に仕分けた後に解析する\r\n                    lastState = smf[p];\r\n                    const ch = channels[lastState&0x0F];\r\n                    ParseUtil.chIndicesInsert(this, ch, tick, p, 3);\r\n                    p += 3;\r\n                    break;\r\n                }\r\n                case 0xC: // Program Change - C[ch],\r\n                case 0xD: // Channel Pre - D[ch],\r\n                {\r\n                    // チャンネル毎に仕分けた後に解析する\r\n                    lastState = smf[p];\r\n                    const ch = channels[lastState&0x0F];\r\n                    ParseUtil.chIndicesInsert(this, ch, tick, p, 2);\r\n                    p += 2;\r\n                    break;\r\n                }\r\n                // SysEx Events or Meta Events - F[ch], ...\r\n                case 0xF: {\r\n                    //lastState = smf[p]; <- ランニングステートは無い\r\n                    switch (smf[p]) {\r\n                        case 0xF0:\r\n                        case 0xF7: {\r\n                            // SysEx Events\r\n                            const lengthAry = ParseUtil.variableLengthToInt(smf, p+1, p+1+4);\r\n\r\n                            // Master Volume\r\n                            // 0xF0, size, 0x7f, 0x7f, 0x04, 0x01, 0xNN, volume, 0xF7\r\n                            if (lengthAry[0] >= 7\r\n                                && smf[p+2] == 0x7f\r\n                                && smf[p+3] == 0x7f\r\n                                && smf[p+4] == 0x04\r\n                                && smf[p+5] == 0x01) {\r\n                                // 全チャンネルにMasterVolumeイベントを挿入する\r\n                                for (let i=0; i<16; i++) {\r\n                                    const ch = channels[i];\r\n                                    ParseUtil.chIndicesInsert(this, ch, tick, p, lengthAry[0]);\r\n                                }\r\n                            }\r\n\r\n                            p += 1 + lengthAry[1] + lengthAry[0];\r\n                            break;\r\n                        }\r\n                        case 0xF1:\r\n                            p += 2;\r\n                            break;\r\n                        case 0xF2:\r\n                            p += 3;\r\n                            break;\r\n                        case 0xF3:\r\n                            p += 2;\r\n                            break;\r\n                        case 0xF6:\r\n                        case 0xF8:\r\n                        case 0xFA:\r\n                        case 0xFB:\r\n                        case 0xFC:\r\n                        case 0xFE:\r\n                            p += 1;\r\n                            break;\r\n                        case 0xFF: {\r\n                            // Meta Events\r\n                            switch (smf[p+1]) {\r\n                                case 0x00:\r\n                                case 0x01:\r\n                                case 0x02:\r\n                                case 0x03:\r\n                                case 0x04:\r\n                                case 0x05:\r\n                                case 0x06:\r\n                                case 0x07:\r\n                                case 0x20:\r\n                                    break;\r\n                                case 0x2F:\r\n                                    tick += (this.settings.isSkipEnding ? 0 : header.resolution) - dt;\r\n                                    break;\r\n                                case 0x51: // Tempo\r\n                                    // 全チャンネルにTempoイベントを挿入する\r\n                                    for (let i=0; i<16; i++) {\r\n                                        const ch = channels[i];\r\n                                        ParseUtil.chIndicesInsert(this, ch, tick, p, 6);\r\n                                    }\r\n                                    tempoCurTime += (60 / tempo / header.resolution) * (tick - tempoCurTick);\r\n                                    tempoCurTick = tick;\r\n                                    tempo = 60000000/(smf[p+3]*0x10000 + smf[p+4]*0x100 + smf[p+5]);\r\n                                    tempoTrack.push({\r\n                                        timing: tick,\r\n                                        time: tempoCurTime,\r\n                                        value: tempo\r\n                                    });\r\n                                    break;\r\n                                case 0x54:\r\n                                    break;\r\n                                case 0x58: // Beat\r\n                                    beatTrack.push({\r\n                                        timing: tick,\r\n                                        value: [smf[p+3], Math.pow(2, smf[p+4])]\r\n                                    });\r\n                                    break;\r\n                                case 0x59:\r\n                                case 0x7F:\r\n                                    break;\r\n                            }\r\n                            const lengthAry = ParseUtil.variableLengthToInt(smf, p+2, p+2+4);\r\n                            p += 2 + lengthAry[1] + lengthAry[0];\r\n                            break;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                default: {\r\n                    if (lastState == null)\r\n                        return \"Irregular SMF. (\" + p + \" byte addr)\";\r\n                    p--;\r\n                    smf[p] = lastState; // 上書き\r\n                    lastState = null;\r\n                }\r\n            }\r\n            // WebMIDIAPI\r\n            if (this.settings.isWebMIDI) {\r\n                if (lastState != null) {\r\n                    // WebMIDI用に17chに全てのMIDIイベントを入れる\r\n                    ParseUtil.chIndicesInsert(this, channels[16], tick, cashP, p - cashP);\r\n                }\r\n            }\r\n        }\r\n        if (!this.settings.isSkipEnding && songLength < tick) songLength = tick;\r\n        // リスト配列のポインタを初期化\r\n        for (let i=0; i<channels.length; i++) {\r\n            channels[i].indicesCur = channels[i].indicesHead;\r\n            channels[i].indicesPre = channels[i].indicesHead;\r\n        }\r\n    }\r\n\r\n    // 関数呼び出し元にデータを返す //\r\n    info.p = p;\r\n    info.tempoTrack = tempoTrack;\r\n    info.beatTrack = beatTrack;\r\n    info.songLength = songLength;\r\n    return info;\r\n}\r\n","import ArrayUtil from '../../util/array-util.js';\r\nimport {Number} from '../../util/ponyfill.js';\r\n\r\nexport default function parseEvent(info) {\r\n    // 関数呼び出し元からデータをもらう //\r\n    const smf = info.smf;\r\n    const header = info.header;\r\n    const channels = info.channels;\r\n    const tempoTrack = info.tempoTrack;\r\n    let songLength = info.songLength;\r\n\r\n    // SMFのMIDIイベント解析 //\r\n    let tempo;\r\n    let tempoCurTick;\r\n    let tempoCurTime;\r\n    let cc111Tick = -1;\r\n    let cc111Time = -1;\r\n    let firstNoteOnTiming = Number.MAX_SAFE_INTEGER(); // 最初のノートオンのTick\r\n    let firstNoteOnTime = Number.MAX_SAFE_INTEGER();\r\n    let lastNoteOffTiming = 0; // 最後のノートオフのTick\r\n    let lastNoteOffTime = 0;\r\n\r\n    // Midi Events (0x8n - 0xEn) parse\r\n    for (let ch=0; ch<16; ch++) {\r\n        const channel = channels[ch];\r\n        let dataEntry = 2;\r\n        let pitchBend = 0;\r\n        let pan = 64;\r\n        let expression = 127;\r\n        let velocity = 100;\r\n        let modulation = 0;\r\n        let hold = 0;\r\n        let reverb = this.settings.initReverb;\r\n        let chorus = 0;\r\n        let nrpnLsb = 127;\r\n        let nrpnMsb = 127;\r\n        let rpnLsb = 127;\r\n        let rpnMsb = 127;\r\n        let instrument = 0;\r\n        let masterVolume = 127;\r\n        tempo = 120;\r\n        tempoCurTick = 0;\r\n        tempoCurTime = 0;\r\n        const nowNoteOnIdxAry = [];\r\n        let indIdx = channel.indicesHead;\r\n        const indices = channel.indices;\r\n        const nextNoteOnAry = new Array(128);\r\n        while (indIdx != -1) {\r\n            const tick = indices[indIdx];\r\n            const p = indices[indIdx+2];\r\n            const nextIdx = indices[indIdx+3];\r\n            const time = (60 / tempo / header.resolution) * (tick - tempoCurTick) + tempoCurTime;\r\n\r\n            // Events\r\n            const mes0 = smf[p] >> 4; // Math.floor(smf[p] / 0x10)\r\n            switch (mes0) {\r\n                case 0x8: // Note OFF - 8[ch], Pitch, Velocity\r\n                case 0x9: // Note ON - 9[ch], Pitch, Velocity\r\n                    if (mes0 == 0x9 && smf[p+2] != 0) { // ノートオン\r\n                        // ノート情報が入ったオブジェクトを作成 //\r\n                        const note = {\r\n                            start: tick,\r\n                            stop: null,\r\n                            startTime: time,\r\n                            stopTime: null,\r\n                            pitch: smf[p+1],\r\n                            pitchBend: [{timing:tick,time:time,value:pitchBend}],\r\n                            pan: [{timing:tick,time:time,value:pan}],\r\n                            expression: [{timing:tick,time:time,value:expression*(masterVolume/127)}],\r\n                            velocity: (smf[p+2]/127)*(velocity/127),\r\n                            modulation: [{timing:tick,time:time,value:modulation}],\r\n                            holdBeforeStop: null,\r\n                            reverb: [{timing:tick,time:time,value:reverb}],\r\n                            chorus: [{timing:tick,time:time,value:chorus}],\r\n                            instrument: instrument,\r\n                            channel: ch,\r\n                            nextSameNoteOnInterval: -1,\r\n                            drumStopTime: 2 // 再生時に使う\r\n                        };\r\n\r\n                        // 前回鳴っていた同音ノートに次のノートオン時間を入れる //\r\n                        // 同音ノートを二重再生したくない場合のために記録する //\r\n                        const prevNote = nextNoteOnAry[smf[p+1]];\r\n                        if (prevNote) {\r\n                            prevNote.nextSameNoteOnInterval = time - prevNote.startTime;\r\n                        }\r\n                        nextNoteOnAry[smf[p+1]] = note;\r\n\r\n                        // 同音ノートがノートオン中の場合、ノートオフにする //\r\n                        nowNoteOnIdxAry.some((idx,i) => {\r\n                            const note = channel.notes[idx];\r\n                            if (note.pitch == smf[p+1] && note.stop==null) {\r\n                                note.stop = tick;\r\n                                note.stopTime = time;\r\n                                ArrayUtil.delete(nowNoteOnIdxAry, i); // nowNoteOnIdxAry.splice(i, 1); を軽量化\r\n                            }\r\n                        });\r\n\r\n                        // ノートオン中配列に入れる\r\n                        nowNoteOnIdxAry.push(channel.notes.length);\r\n                        // notes一覧にnoteオブジェクトを入れる\r\n                        channel.notes.push(note);\r\n\r\n                        // 最初のノートオン時間を記録 //\r\n                        if (tick < firstNoteOnTiming) {\r\n                            firstNoteOnTiming = tick;\r\n                            firstNoteOnTime = time;\r\n                        }\r\n                    } else { // ノートオフ\r\n                        // ノートオン中配列から該当ノートを探し、ノートオフ処理をする //\r\n                        nowNoteOnIdxAry.some((idx, i) => {\r\n                            const note = channel.notes[idx];\r\n                            if (note.pitch == smf[p+1] && note.stop == null) {\r\n                                if (hold >= this.settings.holdOnValue) { // ホールドが効いている場合\r\n                                    if (note.holdBeforeStop == null) {\r\n                                        note.holdBeforeStop = [{\r\n                                            timing: tick,\r\n                                            time: time,\r\n                                            value: hold\r\n                                        }];\r\n                                    }\r\n                                } else { // ホールドしていない場合\r\n                                    note.stop = tick;\r\n                                    note.stopTime = time;\r\n                                    ArrayUtil.delete(nowNoteOnIdxAry, i); // nowNoteOnIdxAry.splice(i, 1); を軽量化\r\n                                }\r\n\r\n                                // 最後のノートオフ時間を記録 //\r\n                                if (tick > lastNoteOffTiming) {\r\n                                    lastNoteOffTiming = tick;\r\n                                    lastNoteOffTime = time;\r\n                                }\r\n                                return true;\r\n                            }\r\n                        });\r\n                    }\r\n                    break;\r\n                // Polyfonic Key Pressure - A[ch], Pitch?, Velocity?\r\n                case 0xA:\r\n                    break;\r\n                // Control Change - B[ch],,\r\n                case 0xB:\r\n                    switch (smf[p+1]) {\r\n                        case 1:\r\n                            // modulation\r\n                            modulation = smf[p+2];\r\n                            nowNoteOnIdxAry.forEach((idx) => {\r\n                                const note = channel.notes[idx];\r\n                                note.modulation.push({\r\n                                    timing: tick,\r\n                                    time: time,\r\n                                    value: modulation\r\n                                });\r\n                            });\r\n                            break;\r\n                        case 6:\r\n                            if (rpnLsb==0 && rpnMsb==0) {\r\n                                // RLSB=0 & RMSB=0 -> 6はピッチ\r\n                                dataEntry = smf[p+2];\r\n                                if (dataEntry > 24) {\r\n                                    dataEntry = 24;\r\n                                }\r\n                            }\r\n                            if (nrpnLsb==8 && nrpnMsb==1) {\r\n                                // (保留)ビブラート・レイト(GM2/GS/XG)\r\n                                //console.log(\"CC  8 1 6 \"+smf[p+2]+\" tick:\"+tick);\r\n                            } else if (nrpnLsb==9 && nrpnMsb==1) {\r\n                                // (保留)ビブラート・デプス(GM2/GS/XG)\r\n                                //console.log(\"CC  9 1 6 \"+smf[p+2]+\" tick:\"+tick);\r\n                            } else if (nrpnLsb==10 && nrpnMsb==1) {\r\n                                // (保留)ビブラート・ディレイ(GM2/GS/XG)\r\n                                //console.log(\"CC 10 1 6 \"+smf[p+2]+\" tick:\"+tick);\r\n                            }\r\n                            break;\r\n                        case 7: \r\n                            velocity = smf[p+2];\r\n                            break;\r\n                        case 10: // Pan\r\n                            pan = smf[p+2];\r\n                            nowNoteOnIdxAry.forEach((idx) => {\r\n                                const note = channel.notes[idx];\r\n                                note.pan.push({\r\n                                    timing: tick,\r\n                                    time: time,\r\n                                    value: pan\r\n                                });\r\n                            });\r\n                            break;\r\n                        case 11: // Expression\r\n                            expression = smf[p+2];\r\n                            nowNoteOnIdxAry.forEach((idx) => {\r\n                                const note = channel.notes[idx];\r\n                                note.expression.push({\r\n                                    timing: tick,\r\n                                    time: time,\r\n                                    value: expression*(masterVolume/127)\r\n                                });\r\n                            });\r\n                            break;\r\n                        case 64: // Hold1\r\n                            hold = smf[p+2];\r\n                            if (hold < this.settings.holdOnValue) {\r\n                                for (let i=nowNoteOnIdxAry.length-1; i>=0; i--) {\r\n                                    const idx = nowNoteOnIdxAry[i];\r\n                                    const note = channel.notes[idx];\r\n                                    if (note.stop == null && note.holdBeforeStop != null) {\r\n                                        note.stop = tick;\r\n                                        note.stopTime = time;\r\n                                        ArrayUtil.delete(nowNoteOnIdxAry, i); // nowNoteOnIdxAry.splice(i, 1); を軽量化\r\n                                    }\r\n                                }\r\n                            }\r\n                            break;\r\n                        case 91: // reverb\r\n                            reverb = smf[p+2];\r\n                            nowNoteOnIdxAry.forEach((idx) => {\r\n                                const note = channel.notes[idx];\r\n                                note.reverb.push({\r\n                                    timing: tick,\r\n                                    time: time,\r\n                                    value: reverb\r\n                                });\r\n                            });\r\n                            break;\r\n                        case 93: // chorus\r\n                            chorus = smf[p+2];\r\n                            nowNoteOnIdxAry.forEach((idx) => {\r\n                                const note = channel.notes[idx];\r\n                                note.chorus.push({\r\n                                    timing: tick,\r\n                                    time: time,\r\n                                    value: chorus\r\n                                });\r\n                            });\r\n                            break;\r\n                        case 98:\r\n                            nrpnLsb = smf[p+2];\r\n                            break;\r\n                        case 99:\r\n                            nrpnMsb = smf[p+2];\r\n                            break;\r\n                        case 100:\r\n                            rpnLsb = smf[p+2];\r\n                            break;\r\n                        case 101:\r\n                            rpnMsb = smf[p+2];\r\n                            break;\r\n                        case 111: // RPGツクール用ループ(CC111)\r\n                            if (cc111Tick == -1) {\r\n                                cc111Tick = tick;\r\n                                cc111Time = time;\r\n                            }\r\n                            break;\r\n                    }\r\n                    break;\r\n                // Program Change - C[ch],\r\n                case 0xC:\r\n                    instrument = smf[p+1];\r\n                    break;\r\n                // Channel Pre - D[ch],\r\n                case 0xD:\r\n                    break;\r\n                // PitchBend Change - E[ch],,\r\n                case 0xE:\r\n                    pitchBend = ((smf[p+2]*128+smf[p+1])-8192)/8192*dataEntry;\r\n                    nowNoteOnIdxAry.forEach((idx) => {\r\n                        const note = channel.notes[idx];\r\n                        note.pitchBend.push({\r\n                            timing: tick,\r\n                            time: time,\r\n                            value: pitchBend\r\n                        });\r\n                    });\r\n                    break;\r\n                case 0xF:\r\n                    //lastState = smf[p]; <- ランニングステートは無い\r\n                    switch (smf[p]) {\r\n                        case 0xF0:\r\n                        case 0xF7:\r\n                            // Master Volume\r\n                            if (smf[p+1]==0x7f && smf[p+2]==0x7f && smf[p+3]==0x04 && smf[p+4]==0x01) {\r\n                                let vol = smf[p+6];\r\n                                if (vol > 127) vol = 127;\r\n                                masterVolume = vol;\r\n                                nowNoteOnIdxAry.forEach((idx) => {\r\n                                    const note = channel.notes[idx];\r\n                                    note.expression.push({\r\n                                        timing: tick,\r\n                                        time: time,\r\n                                        value: expression*(masterVolume/127)\r\n                                    });\r\n                                });\r\n                            }\r\n                            break;\r\n                        case 0xFF:\r\n                            // Meta Events\r\n                            switch (smf[p+1]) {\r\n                                case 0x51:\r\n                                    // Tempo\r\n                                    tempoCurTime += (60 / tempo / header.resolution) * (tick - tempoCurTick);\r\n                                    tempoCurTick = tick;\r\n                                    tempo = 60000000/(smf[p+3]*0x10000 + smf[p+4]*0x100 + smf[p+5]);\r\n                                    break;\r\n                            }\r\n                        break;\r\n                    }\r\n                    break;\r\n                default: {\r\n                    return \"Error parseSMF. \";\r\n                }\r\n            }\r\n            indIdx = nextIdx;\r\n        }\r\n        channel.nowNoteOnIdxAry = nowNoteOnIdxAry;\r\n        if (!this.debug) {\r\n            delete channel.indices;\r\n        }\r\n    }\r\n\r\n    // ホールドが効いてノートオンのままになったノートをノートオフする //\r\n    for (let ch=0; ch<16; ch++) {\r\n        const channel = channels[ch];\r\n        const nowNoteOnIdxAry = channel.nowNoteOnIdxAry;\r\n        for (let i=nowNoteOnIdxAry.length-1; i>=0; i--) {\r\n            const note = channel.notes[nowNoteOnIdxAry[i]];\r\n            if (note.stop==null) {\r\n                note.stop = lastNoteOffTiming;\r\n                note.stopTime = lastNoteOffTime;\r\n                // If (note.cc[x].timing > lastNoteOffTiming), delete note.cc[x]\r\n                const nameAry = [\"pitchBend\", \"pan\", \"expression\", \"modulation\", \"reverb\", \"chorus\"];\r\n                nameAry.forEach((name) => {\r\n                    const ccAry = note[name];\r\n                    for (let i2=ccAry.length-1; i2>=1; i2--) {\r\n                        const obj = ccAry[i2];\r\n                        if (obj.timing>lastNoteOffTiming) {\r\n                            ArrayUtil.delete(ccAry, i2); // ccAry.splice(i2, 1); を軽量化\r\n                        }\r\n                    }\r\n                });\r\n                ArrayUtil.delete(nowNoteOnIdxAry, i); // nowNoteOnIdxAry.splice(i, 1); を軽量化\r\n            }\r\n        }\r\n        delete channel.nowNoteOnIdxAry;\r\n    }\r\n    if (this.settings.isSkipEnding) songLength = lastNoteOffTiming;\r\n    tempoTrack.push({ timing:songLength, time:(60 / tempo / header.resolution) * (songLength - tempoCurTick) + tempoCurTime, value:120 });\r\n\r\n    // WebMIDI用のMIDIメッセージを作成 //\r\n    const messages = [];\r\n    if (this.settings.isWebMIDI) {\r\n        const channel = channels[16];\r\n        let tempo = 120;\r\n        let tempoCurTick = 0;\r\n        let tempoCurTime = 0;\r\n        let indIdx = channel.indicesHead;\r\n        const indices = channel.indices;\r\n        while (indIdx != -1) {\r\n            const tick = indices[indIdx];\r\n            const pLen = indices[indIdx+1];\r\n            const p = indices[indIdx+2];\r\n            const nextIdx = indices[indIdx+3];\r\n            const time = (60 / tempo / header.resolution) * (tick - tempoCurTick) + tempoCurTime;\r\n            // Events\r\n            switch (smf[p]) {\r\n                case 0xFF:\r\n                // Meta Events\r\n                switch (smf[p+1]) {\r\n                    case 0x51:\r\n                        // Tempo\r\n                        tempoCurTime += (60 / tempo / header.resolution) * (tick - tempoCurTick);\r\n                        tempoCurTick = tick;\r\n                        tempo = 60000000/(smf[p+3]*0x10000 + smf[p+4]*0x100 + smf[p+5]);\r\n                        break;\r\n                }\r\n            }\r\n            messages.push({time:time, tick:tick, smfPtr:p, smfPtrLen:pLen});\r\n            indIdx = nextIdx;\r\n        }\r\n    }\r\n\r\n    // 関数呼び出し元にデータを返す //\r\n    info.songLength = songLength;\r\n    info.cc111Tick = cc111Tick;\r\n    info.cc111Time = cc111Time;\r\n    info.firstNoteOnTiming = firstNoteOnTiming;\r\n    info.firstNoteOnTime = firstNoteOnTime;\r\n    info.lastNoteOffTiming = lastNoteOffTiming;\r\n    info.lastNoteOffTime = lastNoteOffTime;\r\n    if (this.settings.isWebMIDI) {\r\n        info.messages = messages;\r\n        info.smfData = new Uint8Array(smf); // lastStateを上書きしたsmfをコピー\r\n    }\r\n\r\n    return info;\r\n}","import parseHeader from './parse-smf/parse-header.js';\r\nimport parseTrack from './parse-smf/parse-track.js';\r\nimport parseEvent from './parse-smf/parse-event.js';\r\nimport {Performance} from '../util/ponyfill.js';\r\n\r\nexport default function parseSMF(_smf) {\r\n    if (this.debug) {\r\n        console.log(_smf);\r\n        var syoriTimeS1 = Performance.now();\r\n    }\r\n\r\n    // smf配列はデータ上書きするので_smfをディープコピーする\r\n    const smf = new Uint8Array(_smf);\r\n\r\n    // SMFのフォーマットかどうかチェック //\r\n    // \"MThd\"\r\n    if (smf[0] != 77 || smf[1] != 84 || smf[2] != 104 || smf[3] != 100)\r\n        return \"Not Sandard MIDI File.\";\r\n\r\n    // 関数間でデータをやり取りするためのObject //\r\n    const info = {};\r\n    info.smf = smf;\r\n    \r\n    // ヘッダー解析 //\r\n    parseHeader.call(this, info);\r\n    if (this.debug) {\r\n        var syoriTimeS2 = Performance.now();\r\n    }\r\n\r\n    // トラック解析 //\r\n    parseTrack.call(this, info);\r\n    if (this.debug) {\r\n        var syoriTimeS3 = Performance.now();\r\n    }\r\n\r\n    // MIDIイベント解析 //\r\n    parseEvent.call(this, info);\r\n\r\n    // return用のオブジェクトに情報を代入 //\r\n    const data = {};\r\n    data.header = info.header;\r\n    data.tempoTrack = info.tempoTrack;\r\n    data.beatTrack = info.beatTrack;\r\n    data.channels = info.channels;\r\n    data.songLength = info.songLength;\r\n    data.cc111Tick = info.cc111Tick;\r\n    data.cc111Time = info.cc111Time;\r\n    data.firstNoteOnTiming = info.firstNoteOnTiming;\r\n    data.firstNoteOnTime = info.firstNoteOnTime;\r\n    data.lastNoteOffTiming = info.lastNoteOffTiming;\r\n    data.lastNoteOffTime = info.lastNoteOffTime;\r\n    if (this.settings.isWebMIDI) {\r\n        data.messages = info.messages;\r\n        data.smfData = new Uint8Array(smf); // lastStateを上書きしたsmfをコピー\r\n    }\r\n\r\n    if (this.debug) {\r\n        const syoriTimeE = Performance.now();\r\n        console.log(\"parseSMF time\", syoriTimeE - syoriTimeS1);\r\n        console.log(\"parseSMF(0/2) time\", syoriTimeS2 - syoriTimeS1);\r\n        console.log(\"parseSMF(1/2) time\", syoriTimeS3 - syoriTimeS2);\r\n        console.log(\"parseSMF(2/2) time\", syoriTimeE - syoriTimeS3);\r\n        console.log(data);\r\n    }\r\n    return data;\r\n}","export default function startWebMIDI() {\r\n    if (!navigator.requestMIDIAccess) return;\r\n    // 1回目：ブラウザにMIDIデバイスのフルコントロールを要求する(SysExの使用を要求)\r\n    // 2回目：MIDIデバイスのフルコントロールがブロックされたら、SysEx無しでMIDIアクセスを要求する\r\n    let sysEx = this.settings.WebMIDIPortSysEx;\r\n    const midiAccessSuccess = (midiAccess) => {\r\n        const outputs = midiAccess.outputs;\r\n        this.settings.WebMIDIPortOutputs = outputs;\r\n        let output;\r\n        if (this.settings.WebMIDIPort==-1) {\r\n            this.settings.WebMIDIPortOutputs.forEach((o) => {\r\n                if (!output) output = o;\r\n            });\r\n        } else {\r\n            output = this.settings.WebMIDIPortOutputs.get(this.settings.WebMIDIPort);\r\n        }\r\n        this.settings.WebMIDIPortOutput = output;\r\n        this.settings.WebMIDIPortSysEx = sysEx;\r\n        if (output) {\r\n            output.open();\r\n            this.initStatus(); // リセットイベント（GMシステム・オン等）を送るため呼び出す\r\n        }\r\n        return outputs;\r\n    };\r\n    const midiAccessFailure = (err) => {\r\n        console.log(err);\r\n        if (sysEx) {\r\n            sysEx = false;\r\n            navigator.requestMIDIAccess({sysex: sysEx})\r\n                .then(midiAccessSuccess)\r\n                .catch(midiAccessFailure);\r\n        }\r\n    };\r\n    navigator.requestMIDIAccess({sysex: sysEx})\r\n        .then(midiAccessSuccess)\r\n        .catch(midiAccessFailure);\r\n    // 終了時に鳴らしている音を切る\r\n    window.addEventListener('unload', () => {\r\n        for (let t=0; t<16; t++) {\r\n            this.settings.WebMIDIPortOutput.send([0xB0+t, 120, 0]);\r\n            for (let i=0; i<128; i++) {\r\n                this.settings.WebMIDIPortOutput.send([0x80+t, i, 0]);\r\n            }\r\n        }\r\n    });\r\n}","import picoAudioConstructor from './init/constructor.js';\r\nimport init from './init/init.js';\r\n\r\nimport setData from './player/set-data.js';\r\nimport initStatus from './player/init-status.js';\r\nimport play from './player/play.js';\r\nimport stop from './player/stop.js';\r\n\r\nimport createBaseNote from './player/sound-source/create-base-note.js';\r\nimport createNote from './player/sound-source/create-note.js';\r\nimport createPercussionNote from './player/sound-source/create-percussion-note.js';\r\n\r\nimport stopAudioNode from './player/stop-manager/stop-audio-node.js';\r\nimport pushFunc from './player/stop-manager/push-func.js';\r\nimport clearFunc from './player/stop-manager/clear-func.js';\r\n\r\nimport getTime from './player/time/get-time.js';\r\nimport getTiming from './player/time/get-timing.js';\r\n\r\nimport parseSMF from './smf/parse-smf.js';\r\n\r\nimport startWebMIDI from './web-midi/start-web-midi.js';\r\n\r\nclass PicoAudio {\r\n    /**\r\n     * PicoAudioクラスのコンストラクタ\r\n     * @param {Object} argsObj \r\n     */\r\n    constructor(argsObj) {\r\n        picoAudioConstructor.call(this, argsObj);\r\n    }\r\n\r\n    /**\r\n     * 初期化・準備\r\n     * @param {Object} argsObj \r\n     */\r\n    init(argsObj) {\r\n        return init.call(this, argsObj);\r\n    }\r\n    \r\n    /**\r\n     * MIDIファイル(SMF)を解析する\r\n     * @param {Uint8Array} smf MIDIファイルの内容が入ったUint8Arrayオブジェクト\r\n     * @returns {Object} 再生用の情報が入ったオブジェクト\r\n     */\r\n    parseSMF(smf) {\r\n        return parseSMF.call(this, smf);\r\n    }\r\n\r\n    /**\r\n     * 再生用のデータをセットする\r\n     * @param {Object} data PicoAudio.parseSMF()で返されたオブジェクト\r\n     */\r\n    setData(data) {\r\n        return setData.call(this, data);\r\n    }\r\n\r\n    /**\r\n     * 再生\r\n     * @param {boolean} _isSongLooping PicoAudio内部で使う引数\r\n     */\r\n    play(_isSongLooping) {\r\n        return play.call(this, _isSongLooping);\r\n    }\r\n\r\n    /**\r\n     * 停止\r\n     * @param {boolean} _isSongLooping PicoAudio内部で使う引数\r\n     */\r\n    stop(_isSongLooping) {\r\n        return stop.call(this, _isSongLooping);\r\n    }\r\n\r\n    /**\r\n     * リセット\r\n     * @param {boolean} _isSongLooping PicoAudio内部で使う引数\r\n     * @param {boolean} _isLight PicoAudio内部で使う引数\r\n     */\r\n    initStatus(_isSongLooping, _isLight) {\r\n        return initStatus.call(this, _isSongLooping, _isLight);\r\n    }\r\n\r\n    setStartTime(offset) {\r\n        this.states.startTime -= offset;\r\n    }\r\n\r\n    // 時関関係 //\r\n    /**\r\n     * tickからtime(秒)を求める\r\n     * @param {number} tick\r\n     * @returns {number} time(秒)\r\n     */\r\n    getTime(tick) {\r\n        return getTime.call(this, tick);\r\n    }\r\n    /**\r\n     * time(秒)からtickを求める\r\n     * @param {number} time\r\n     * @returns {number} tick\r\n     */\r\n    getTiming(time) {\r\n        return getTiming.call(this, time);\r\n    }\r\n\r\n    // 再生・音源関係 //\r\n    /**\r\n     * 再生処理（Web Audio API の oscillator等で音を鳴らす）\r\n     * @param {Object} option \r\n     * @param {boolean} isDrum \r\n     * @param {boolean} isExpression \r\n     * @param {boolean} nonChannel \r\n     * @param {boolean} nonStop \r\n     * @returns {Object} AudioNodeやパラメータを返す\r\n     */\r\n    createBaseNote(option, isDrum, isExpression, nonChannel, nonStop) {\r\n        return createBaseNote.call(this, option, isDrum, isExpression, nonChannel, nonStop);\r\n    }\r\n    /**\r\n     * 音源（パーカッション以外）\r\n     * @param {Object} option \r\n     * @returns {Object} 音をストップさせる関数を返す\r\n     */\r\n    createNote(option) {\r\n        return createNote.call(this, option);\r\n    }\r\n    /**\r\n     * パーカッション音源\r\n     * @param {Object} option \r\n     * @returns {Object} 音をストップさせる関数を返す\r\n     */\r\n    createPercussionNote(option) {\r\n        return createPercussionNote.call(this, option);\r\n    }\r\n\r\n    // 停止管理関係 //\r\n    stopAudioNode(tar, time, stopGainNode, isNoiseCut) {\r\n        return stopAudioNode.call(this, tar, time, stopGainNode, isNoiseCut);\r\n    }\r\n    pushFunc(tar) {\r\n        return pushFunc.call(this, tar);\r\n    }\r\n    clearFunc(tar1, tar2) {\r\n        return clearFunc.call(this, tar1, tar2);\r\n    }\r\n\r\n    /**\r\n     * Web MIDI API\r\n     */\r\n    startWebMIDI() {\r\n        return startWebMIDI.call(this);\r\n    }\r\n\r\n    // インターフェース関係 //\r\n    addEventListener(type, func) {\r\n        // type = EventName (play, stop, noteOn, noteOff, songEnd)\r\n        this.events.push({type: type, func: func});\r\n    }\r\n    removeEventListener(type, func) {\r\n        for (let i = this.events.length; i >= 0; i--) {\r\n            if (event.type == type && event.func === func) {\r\n                this.events.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n    removeAllEventListener(type) {\r\n        for (let i = this.events.length; i >= 0; i--) {\r\n            if (event.type == type) {\r\n                this.events.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n    fireEvent(type, option) {\r\n        this.events.forEach((event) => {\r\n            if (event.type == type) {\r\n                try {\r\n                    event.func(option);\r\n                } catch(e) {\r\n                    console.log(e);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    setOnSongEndListener(listener) { this.onSongEndListener = listener; }\r\n    onSongEnd() {\r\n        if (this.onSongEndListener) {\r\n            const isStopFunc = this.onSongEndListener();\r\n            if (isStopFunc) return;\r\n        }\r\n        if (this.settings.loop) {\r\n            this.initStatus(true);\r\n            if (this.settings.isCC111 && this.cc111Time != -1) {\r\n                this.setStartTime(this.cc111Time);\r\n            }\r\n            this.play(true);\r\n        }\r\n    }\r\n    gethannels() { return this.channels; }\r\n    setChannels(channels) {\r\n        channels.forEach((channel, idx) => {\r\n            this.channels[idx] = channel;\r\n        });\r\n    }\r\n    initChannels() {\r\n        for (let i=0; i<16; i++) {\r\n            this.channels[i] = [0,0,1];\r\n        }\r\n    }\r\n    getMasterVolume() { return this.settings.masterVolume; }\r\n    setMasterVolume(volume) {\r\n        this.settings.masterVolume = volume;\r\n        if (this.isStarted) {\r\n            this.masterGainNode.gain.value = this.settings.masterVolume;\r\n        }\r\n    } \r\n    isLoop() { return this.settings.loop; }\r\n    setLoop(loop) { this.settings.loop = loop; }\r\n    isWebMIDI() { return this.settings.isWebMIDI; }\r\n    setWebMIDI(enable) { this.settings.isWebMIDI = enable; }\r\n    isCC111() { return this.settings.isCC111; }\r\n    setCC111(enable) { this.settings.isCC111 = enable; } \r\n    isReverb() { return this.settings.isReverb; }\r\n    setReverb(enable) { this.settings.isReverb = enable; }\r\n    getReverbVolume() { return this.settings.reverbVolume; }\r\n    setReverbVolume(volume) { this.settings.reverbVolume = volume; }\r\n    isChorus() { return this.settings.isChorus; }\r\n    setChorus(enable) { this.settings.isChorus = enable; }\r\n    getChorusVolume() { return this.settings.chorusVolume; }\r\n    setChorusVolume(volume) { this.settings.chorusVolume = volume; }\r\n}\r\n\r\nexport default PicoAudio;"],"names":["picoAudioConstructor","argsObj","debug","isStarted","isPlayed","settings","masterVolume","generateVolume","tempo","basePitch","resolution","isWebMIDI","WebMIDIPortOutputs","WebMIDIPortOutput","WebMIDIPort","WebMIDIPortSysEx","isReverb","reverbVolume","initReverb","isChorus","chorusVolume","isCC111","loop","isSkipBeginning","isSkipEnding","holdOnValue","maxPoly","maxPercPoly","isOfflineRendering","isSameDrumSoundOverlap","rewriteVar","key","events","trigger","isNoteTrigger","play","stop","noteOn","noteOff","songEnd","states","isPlaying","startTime","stopTime","stopFuncs","webMIDIWaitState","webMIDIStopTime","playIndices","updateBufTime","updateBufMaxTime","updateIntervalTime","latencyLimitTime","hashedDataList","hashedMessageList","playData","channels","tempoTrack","timing","value","cc111Time","onSongEndListener","i","push","audioContext","init","dist","src","hensu","RandomUtil","x","y","z","w","resetSeed","t","r","Math","abs","InterpolationUtil","buffer","vtBufs","bufferSize","getChannelData","length","vtBufsSize","ch","data","vtBuf","ratio","idxF","idx1","trunc","idx2","idxR","picoAudio","AudioContext","window","webkitAudioContext","context","masterGainNode","createGain","gain","sampleRate","sampleRateVT","whitenoise","seLength","sampleLength","sampleLengthVT","Float32Array","random","createBuffer","lerpWave","impulseResponse","v","s","d","pow","convolver","createConvolver","normalize","convolverGainNode","connect","destination","chorusDelayNode","createDelay","chorusGainNode","chorusOscillator","createOscillator","chorusLfoGainNode","delayTime","frequency","start","Performance","_now","performance","Date","now","Number","setData","syoriTimeS","header","firstNoteOnTiming","lastNoteOffTiming","firstNoteOnTime","lastNoteOffTime","initStatus","syoriTimeE","console","log","isSongLooping","isLight","noteOnAry","noteOffAry","startWebMIDI","send","ArrayUtil","array","index","pop","shift","splice","Array","ParseUtil","arr","startIdx","endIdx","that","time","p","len","indices","indicesLength","indicesFoot","indicesCur","indicesHead","indicesPre","UpdateNote","currentTime","updatePreTime","pPreTime","cPreTime","pTimeSum","cTimeSum","cnt","initCurrentTime","updateNowTime","pTime","cTime","latencyTime","tempTime","notes","idx","note","curTime","polyCnt","percCnt","forEach","tar","channel","stopFunc","createNote","createPercussionNote","pushFunc","checkNoteOn","checkNoteOff","messages","smfData","message","pLen","smfPtrLen","smfPtr","state","lengthAry","variableLengthToInt","sysExStartP","sysExEndP","webMIDIMes","Uint8Array","size","sendMes","e","tempNote","nowTime","fireEvent","drumStopTime","clearFunc","waitTime","setTimeout","setStartTime","reserveSongEnd","reserveSongEndFunc","finishTime","getTime","MAX_SAFE_INTEGER","onSongEnd","rootTimeout","clearTimeout","reserveSongEndTime","reserve","setInterval","update","clearInterval","n","ary","createBaseNote","option","isDrum","isExpression","nonChannel","nonStop","songStartTime","velocity","isGainValueZero","expGainValue","expression","expGainNode","setValueAtTime","pitch","oscillator","createBufferSource","panNode","createStereoPanner","createPanner","pan","gainNode","stopGainNode","type","detune","pitchBend","panValue","initPanValue","firstNode","positionX","firstPan","posObj","convPosition","positionY","positionZ","reservePan","setPosition","modulationOscillator","modulationGainNode","modulation","m","reverb","chorus","c","stopAudioNode","panningModel","obj","panAngle","sin","PI","cos","isPizzicato","isNoiseCut","note2","instrument","linearRampToValueAtTime","decay","setTargetAtTime","playbackRate","source","gainNode2","stopGainNode2","nextSameNoteOnInterval","stopAudioTime","stopAudioTime2","f","t1","t2","t3","t4","t5","r1","r2","r3","r4","r5","r6","invert","isImmed","vol1Time","cancelScheduledValues","tar1","tar2","some","tick","imid","imin","imax","floor","tempTiming","baseTiming","tempoObj","getTiming","baseTime","parseHeader","info","smf","getInt","format","trackcount","timemanage","chSize","parseTrack","beatTrack","songLength","endPoint","tempoCurTick","tempoCurTime","lastState","dt","cashP","mes0","chIndicesInsert","parseEvent","cc111Tick","dataEntry","hold","nrpnLsb","nrpnMsb","rpnLsb","rpnMsb","nowNoteOnIdxAry","indIdx","nextNoteOnAry","nextIdx","holdBeforeStop","prevNote","vol","nameAry","name","ccAry","i2","parseSMF","_smf","syoriTimeS1","call","syoriTimeS2","syoriTimeS3","navigator","requestMIDIAccess","sysEx","midiAccessSuccess","midiAccess","outputs","output","o","get","open","midiAccessFailure","err","sysex","then","addEventListener","PicoAudio","_isSongLooping","_isLight","offset","func","event","listener","isStopFunc","volume","enable"],"mappings":"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"}